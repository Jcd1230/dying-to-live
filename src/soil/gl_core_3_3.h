#ifndef POINTER_C_GENERATED_HEADER_OPENGL_H
#define POINTER_C_GENERATED_HEADER_OPENGL_H

#if defined(__glew_h__) || defined(__GLEW_H__)
#error Attempt to include auto-generated header after including glew.h
#endif
#if defined(__gl_h_) || defined(__GL_H__)
#error Attempt to include auto-generated header after including gl.h
#endif
#if defined(__glext_h_) || defined(__GLEXT_H_)
#error Attempt to include auto-generated header after including glext.h
#endif
#if defined(__gltypes_h_)
#error Attempt to include auto-generated header after gltypes.h
#endif
#if defined(__gl_ATI_h_)
#error Attempt to include auto-generated header after including glATI.h
#endif

#define __glew_h__
#define __GLEW_H__
#define __gl_h_
#define __GL_H__
#define __glext_h_
#define __GLEXT_H_
#define __gltypes_h_
#define __gl_ATI_h_

#ifndef APIENTRY
	#if defined(__MINGW32__)
		#ifndef WIN32_LEAN_AND_MEAN
			#define WIN32_LEAN_AND_MEAN 1
		#endif
		#ifndef NOMINMAX
			#define NOMINMAX
		#endif
		#include <windows.h>
	#elif (_MSC_VER >= 800) || defined(_STDCALL_SUPPORTED) || defined(__BORLANDC__)
		#ifndef WIN32_LEAN_AND_MEAN
			#define WIN32_LEAN_AND_MEAN 1
		#endif
		#ifndef NOMINMAX
			#define NOMINMAX
		#endif
		#include <windows.h>
	#else
		#define APIENTRY
	#endif
#endif /*APIENTRY*/

#ifndef CODEGEN_FUNCPTR
	#define CODEGEN_REMOVE_FUNCPTR
	#if defined(_WIN32)
		#define CODEGEN_FUNCPTR APIENTRY
	#else
		#define CODEGEN_FUNCPTR
	#endif
#endif /*CODEGEN_FUNCPTR*/

#ifndef GLAPI
	#define GLAPI extern
#endif


#ifndef GL_LOAD_GEN_BASIC_OPENGL_TYPEDEFS
#define GL_LOAD_GEN_BASIC_OPENGL_TYPEDEFS


#endif /*GL_LOAD_GEN_BASIC_OPENGL_TYPEDEFS*/


#include <stddef.h>
#ifndef GLEXT_64_TYPES_DEFINED
/* This code block is duplicated in glxext.h, so must be protected */
#define GLEXT_64_TYPES_DEFINED
/* Define int32_t, int64_t, and uint64_t types for UST/MSC */
/* (as used in the GL_EXT_timer_query extension). */
#if defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
#include <inttypes.h>
#elif defined(__sun__) || defined(__digital__)
#include <inttypes.h>
#if defined(__STDC__)
#if defined(__arch64__) || defined(_LP64)
typedef long int int64_t;
typedef unsigned long int uint64_t;
#else
typedef long long int int64_t;
typedef unsigned long long int uint64_t;
#endif /* __arch64__ */
#endif /* __STDC__ */
#elif defined( __VMS ) || defined(__sgi)
#include <inttypes.h>
#elif defined(__SCO__) || defined(__USLC__)
#include <stdint.h>
#elif defined(__UNIXOS2__) || defined(__SOL64__)
typedef long int int32_t;
typedef long long int int64_t;
typedef unsigned long long int uint64_t;
#elif defined(_WIN32) && defined(__GNUC__)
#include <stdint.h>
#elif defined(_WIN32)
typedef __int32 int32_t;
typedef __int64 int64_t;
typedef unsigned __int64 uint64_t;
#else
/* Fallback if nothing above works */
#include <inttypes.h>
#endif
#endif
	typedef unsigned int GLenum;
	typedef unsigned char GLboolean;
	typedef unsigned int GLbitfield;
	typedef void GLvoid;
	typedef signed char GLbyte;
	typedef short GLshort;
	typedef int GLint;
	typedef unsigned char GLubyte;
	typedef unsigned short GLushort;
	typedef unsigned int GLuint;
	typedef int GLsizei;
	typedef float GLfloat;
	typedef float GLclampf;
	typedef double GLdouble;
	typedef double GLclampd;
	typedef char GLchar;
	typedef char GLcharARB;
	#ifdef __APPLE__
typedef void *GLhandleARB;
#else
typedef unsigned int GLhandleARB;
#endif
		typedef unsigned short GLhalfARB;
		typedef unsigned short GLhalf;
		typedef GLint GLfixed;
		typedef ptrdiff_t GLintptr;
		typedef ptrdiff_t GLsizeiptr;
		typedef int64_t GLint64;
		typedef uint64_t GLuint64;
		typedef ptrdiff_t GLintptrARB;
		typedef ptrdiff_t GLsizeiptrARB;
		typedef int64_t GLint64EXT;
		typedef uint64_t GLuint64EXT;
		typedef struct __GLsync *GLsync;
		struct _cl_context;
		struct _cl_event;
		typedef void (APIENTRY *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
		typedef void (APIENTRY *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
		typedef void (APIENTRY *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar *message,void *userParam);
		typedef unsigned short GLhalfNV;
		typedef GLintptr GLvdpauSurfaceNV;

#ifdef __cplusplus
extern "C" {
#endif /*__cplusplus*/

extern int ogl_ext_EXT_texture_compression_s3tc;
extern int ogl_ext_EXT_texture_sRGB;
extern int ogl_ext_EXT_texture_filter_anisotropic;
extern int ogl_ext_ARB_compressed_texture_pixel_storage;
extern int ogl_ext_ARB_conservative_depth;
extern int ogl_ext_ARB_ES2_compatibility;
extern int ogl_ext_ARB_get_program_binary;
extern int ogl_ext_ARB_explicit_uniform_location;
extern int ogl_ext_ARB_internalformat_query;
extern int ogl_ext_ARB_internalformat_query2;
extern int ogl_ext_ARB_map_buffer_alignment;
extern int ogl_ext_ARB_program_interface_query;
extern int ogl_ext_ARB_separate_shader_objects;
extern int ogl_ext_ARB_shading_language_420pack;
extern int ogl_ext_ARB_shading_language_packing;
extern int ogl_ext_ARB_texture_buffer_range;
extern int ogl_ext_ARB_texture_storage;
extern int ogl_ext_ARB_texture_view;
extern int ogl_ext_ARB_vertex_attrib_binding;
extern int ogl_ext_ARB_viewport_array;
extern int ogl_ext_ARB_arrays_of_arrays;
extern int ogl_ext_ARB_clear_buffer_object;
extern int ogl_ext_ARB_copy_image;
extern int ogl_ext_ARB_ES3_compatibility;
extern int ogl_ext_ARB_fragment_layer_viewport;
extern int ogl_ext_ARB_framebuffer_no_attachments;
extern int ogl_ext_ARB_invalidate_subdata;
extern int ogl_ext_ARB_robust_buffer_access_behavior;
extern int ogl_ext_ARB_stencil_texturing;
extern int ogl_ext_ARB_texture_query_levels;
extern int ogl_ext_ARB_texture_storage_multisample;
extern int ogl_ext_KHR_debug;

#define GL_COMPRESSED_RGBA_S3TC_DXT1_EXT 0x83F1
#define GL_COMPRESSED_RGBA_S3TC_DXT3_EXT 0x83F2
#define GL_COMPRESSED_RGBA_S3TC_DXT5_EXT 0x83F3
#define GL_COMPRESSED_RGB_S3TC_DXT1_EXT 0x83F0

#define GL_COMPRESSED_SLUMINANCE_ALPHA_EXT 0x8C4B
#define GL_COMPRESSED_SLUMINANCE_EXT 0x8C4A
#define GL_COMPRESSED_SRGB_ALPHA_EXT 0x8C49
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT 0x8C4D
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT 0x8C4E
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT 0x8C4F
#define GL_COMPRESSED_SRGB_EXT 0x8C48
#define GL_COMPRESSED_SRGB_S3TC_DXT1_EXT 0x8C4C
#define GL_SLUMINANCE8_ALPHA8_EXT 0x8C45
#define GL_SLUMINANCE8_EXT 0x8C47
#define GL_SLUMINANCE_ALPHA_EXT 0x8C44
#define GL_SLUMINANCE_EXT 0x8C46
#define GL_SRGB8_ALPHA8_EXT 0x8C43
#define GL_SRGB8_EXT 0x8C41
#define GL_SRGB_ALPHA_EXT 0x8C42
#define GL_SRGB_EXT 0x8C40

#define GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT 0x84FF
#define GL_TEXTURE_MAX_ANISOTROPY_EXT 0x84FE

#define GL_PACK_COMPRESSED_BLOCK_DEPTH 0x912D
#define GL_PACK_COMPRESSED_BLOCK_HEIGHT 0x912C
#define GL_PACK_COMPRESSED_BLOCK_SIZE 0x912E
#define GL_PACK_COMPRESSED_BLOCK_WIDTH 0x912B
#define GL_UNPACK_COMPRESSED_BLOCK_DEPTH 0x9129
#define GL_UNPACK_COMPRESSED_BLOCK_HEIGHT 0x9128
#define GL_UNPACK_COMPRESSED_BLOCK_SIZE 0x912A
#define GL_UNPACK_COMPRESSED_BLOCK_WIDTH 0x9127

#define GL_FIXED 0x140C
#define GL_HIGH_FLOAT 0x8DF2
#define GL_HIGH_INT 0x8DF5
#define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#define GL_LOW_FLOAT 0x8DF0
#define GL_LOW_INT 0x8DF3
#define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#define GL_MAX_VARYING_VECTORS 0x8DFC
#define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#define GL_MEDIUM_FLOAT 0x8DF1
#define GL_MEDIUM_INT 0x8DF4
#define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#define GL_RGB565 0x8D62
#define GL_SHADER_BINARY_FORMATS 0x8DF8
#define GL_SHADER_COMPILER 0x8DFA

#define GL_NUM_PROGRAM_BINARY_FORMATS 0x87FE
#define GL_PROGRAM_BINARY_FORMATS 0x87FF
#define GL_PROGRAM_BINARY_LENGTH 0x8741
#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT 0x8257

#define GL_MAX_UNIFORM_LOCATIONS 0x826E

#define GL_NUM_SAMPLE_COUNTS 0x9380

#define GL_AUTO_GENERATE_MIPMAP 0x8295
#define GL_CAVEAT_SUPPORT 0x82B8
#define GL_CLEAR_BUFFER 0x82B4
#define GL_COLOR_COMPONENTS 0x8283
#define GL_COLOR_ENCODING 0x8296
#define GL_COLOR_RENDERABLE 0x8286
#define GL_COMPUTE_TEXTURE 0x82A0
#define GL_DEPTH_COMPONENTS 0x8284
#define GL_DEPTH_RENDERABLE 0x8287
#define GL_FILTER 0x829A
#define GL_FRAGMENT_TEXTURE 0x829F
#define GL_FRAMEBUFFER_BLEND 0x828B
#define GL_FRAMEBUFFER_RENDERABLE 0x8289
#define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#define GL_FULL_SUPPORT 0x82B7
#define GL_GEOMETRY_TEXTURE 0x829E
#define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#define GL_IMAGE_CLASS_11_11_10 0x82C2
#define GL_IMAGE_CLASS_1_X_16 0x82BE
#define GL_IMAGE_CLASS_1_X_32 0x82BB
#define GL_IMAGE_CLASS_1_X_8 0x82C1
#define GL_IMAGE_CLASS_2_X_16 0x82BD
#define GL_IMAGE_CLASS_2_X_32 0x82BA
#define GL_IMAGE_CLASS_2_X_8 0x82C0
#define GL_IMAGE_CLASS_4_X_16 0x82BC
#define GL_IMAGE_CLASS_4_X_32 0x82B9
#define GL_IMAGE_CLASS_4_X_8 0x82BF
#define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE 0x90C7
#define GL_IMAGE_PIXEL_FORMAT 0x82A9
#define GL_IMAGE_PIXEL_TYPE 0x82AA
#define GL_IMAGE_TEXEL_SIZE 0x82A7
#define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#define GL_INTERNALFORMAT_PREFERRED 0x8270
#define GL_INTERNALFORMAT_RED_SIZE 0x8271
#define GL_INTERNALFORMAT_RED_TYPE 0x8278
#define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#define GL_INTERNALFORMAT_SUPPORTED 0x826F
#define GL_MANUAL_GENERATE_MIPMAP 0x8294
#define GL_MAX_COMBINED_DIMENSIONS 0x8282
#define GL_MAX_DEPTH 0x8280
#define GL_MAX_HEIGHT 0x827F
#define GL_MAX_LAYERS 0x8281
#define GL_MAX_WIDTH 0x827E
#define GL_MIPMAP 0x8293
/*Copied GL_NUM_SAMPLE_COUNTS From: ARB_internalformat_query*/
#define GL_READ_PIXELS 0x828C
#define GL_READ_PIXELS_FORMAT 0x828D
#define GL_READ_PIXELS_TYPE 0x828E
#define GL_RENDERBUFFER 0x8D41
#define GL_SAMPLES 0x80A9
#define GL_SHADER_IMAGE_ATOMIC 0x82A6
#define GL_SHADER_IMAGE_LOAD 0x82A4
#define GL_SHADER_IMAGE_STORE 0x82A5
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#define GL_SRGB_DECODE_ARB 0x8299
#define GL_SRGB_READ 0x8297
#define GL_SRGB_WRITE 0x8298
#define GL_STENCIL_COMPONENTS 0x8285
#define GL_STENCIL_RENDERABLE 0x8288
#define GL_TESS_CONTROL_TEXTURE 0x829C
#define GL_TESS_EVALUATION_TEXTURE 0x829D
#define GL_TEXTURE_1D 0x0DE0
#define GL_TEXTURE_1D_ARRAY 0x8C18
#define GL_TEXTURE_2D 0x0DE1
#define GL_TEXTURE_2D_ARRAY 0x8C1A
#define GL_TEXTURE_2D_MULTISAMPLE 0x9100
#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9102
#define GL_TEXTURE_3D 0x806F
#define GL_TEXTURE_BUFFER 0x8C2A
#define GL_TEXTURE_COMPRESSED 0x86A1
#define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#define GL_TEXTURE_CUBE_MAP 0x8513
#define GL_TEXTURE_CUBE_MAP_ARRAY 0x9009
#define GL_TEXTURE_GATHER 0x82A2
#define GL_TEXTURE_GATHER_SHADOW 0x82A3
#define GL_TEXTURE_IMAGE_FORMAT 0x828F
#define GL_TEXTURE_IMAGE_TYPE 0x8290
#define GL_TEXTURE_RECTANGLE 0x84F5
#define GL_TEXTURE_SHADOW 0x82A1
#define GL_TEXTURE_VIEW 0x82B5
#define GL_VERTEX_TEXTURE 0x829B
#define GL_VIEW_CLASS_128_BITS 0x82C4
#define GL_VIEW_CLASS_16_BITS 0x82CA
#define GL_VIEW_CLASS_24_BITS 0x82C9
#define GL_VIEW_CLASS_32_BITS 0x82C8
#define GL_VIEW_CLASS_48_BITS 0x82C7
#define GL_VIEW_CLASS_64_BITS 0x82C6
#define GL_VIEW_CLASS_8_BITS 0x82CB
#define GL_VIEW_CLASS_96_BITS 0x82C5
#define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#define GL_VIEW_COMPATIBILITY_CLASS 0x82B6

#define GL_MIN_MAP_BUFFER_ALIGNMENT 0x90BC

#define GL_ACTIVE_RESOURCES 0x92F5
#define GL_ACTIVE_VARIABLES 0x9305
#define GL_ARRAY_SIZE 0x92FB
#define GL_ARRAY_STRIDE 0x92FE
#define GL_ATOMIC_COUNTER_BUFFER 0x92C0
#define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#define GL_BLOCK_INDEX 0x92FD
#define GL_BUFFER_BINDING 0x9302
#define GL_BUFFER_DATA_SIZE 0x9303
#define GL_BUFFER_VARIABLE 0x92E5
#define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#define GL_COMPUTE_SUBROUTINE 0x92ED
#define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#define GL_FRAGMENT_SUBROUTINE 0x92EC
#define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#define GL_GEOMETRY_SUBROUTINE 0x92EB
#define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#define GL_IS_PER_PATCH 0x92E7
#define GL_IS_ROW_MAJOR 0x9300
#define GL_LOCATION 0x930E
#define GL_LOCATION_INDEX 0x930F
#define GL_MATRIX_STRIDE 0x92FF
#define GL_MAX_NAME_LENGTH 0x92F6
#define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#define GL_NAME_LENGTH 0x92F9
#define GL_NUM_ACTIVE_VARIABLES 0x9304
#define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#define GL_OFFSET 0x92FC
#define GL_PROGRAM_INPUT 0x92E3
#define GL_PROGRAM_OUTPUT 0x92E4
#define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#define GL_SHADER_STORAGE_BLOCK 0x92E6
#define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#define GL_TYPE 0x92FA
#define GL_UNIFORM 0x92E1
#define GL_UNIFORM_BLOCK 0x92E2
#define GL_VERTEX_SUBROUTINE 0x92E8
#define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE

#define GL_ACTIVE_PROGRAM 0x8259
#define GL_ALL_SHADER_BITS 0xFFFFFFFF
#define GL_FRAGMENT_SHADER_BIT 0x00000002
#define GL_GEOMETRY_SHADER_BIT 0x00000004
#define GL_PROGRAM_PIPELINE_BINDING 0x825A
#define GL_PROGRAM_SEPARABLE 0x8258
#define GL_TESS_CONTROL_SHADER_BIT 0x00000008
#define GL_TESS_EVALUATION_SHADER_BIT 0x00000010
#define GL_VERTEX_SHADER_BIT 0x00000001

#define GL_TEXTURE_BUFFER_OFFSET 0x919D
#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT 0x919F
#define GL_TEXTURE_BUFFER_SIZE 0x919E

#define GL_TEXTURE_IMMUTABLE_FORMAT 0x912F

#define GL_TEXTURE_IMMUTABLE_LEVELS 0x82DF
#define GL_TEXTURE_VIEW_MIN_LAYER 0x82DD
#define GL_TEXTURE_VIEW_MIN_LEVEL 0x82DB
#define GL_TEXTURE_VIEW_NUM_LAYERS 0x82DE
#define GL_TEXTURE_VIEW_NUM_LEVELS 0x82DC

#define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#define GL_VERTEX_ATTRIB_BINDING 0x82D4
#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#define GL_VERTEX_BINDING_DIVISOR 0x82D6
#define GL_VERTEX_BINDING_OFFSET 0x82D7
#define GL_VERTEX_BINDING_STRIDE 0x82D8

#define GL_DEPTH_RANGE 0x0B70
#define GL_FIRST_VERTEX_CONVENTION 0x8E4D
#define GL_LAST_VERTEX_CONVENTION 0x8E4E
#define GL_LAYER_PROVOKING_VERTEX 0x825E
#define GL_MAX_VIEWPORTS 0x825B
#define GL_PROVOKING_VERTEX 0x8E4F
#define GL_SCISSOR_BOX 0x0C10
#define GL_SCISSOR_TEST 0x0C11
#define GL_UNDEFINED_VERTEX 0x8260
#define GL_VIEWPORT 0x0BA2
#define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#define GL_VIEWPORT_SUBPIXEL_BITS 0x825C

#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE 0x8D6A
#define GL_COMPRESSED_R11_EAC 0x9270
#define GL_COMPRESSED_RG11_EAC 0x9272
#define GL_COMPRESSED_RGB8_ETC2 0x9274
#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9276
#define GL_COMPRESSED_RGBA8_ETC2_EAC 0x9278
#define GL_COMPRESSED_SIGNED_R11_EAC 0x9271
#define GL_COMPRESSED_SIGNED_RG11_EAC 0x9273
#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC 0x9279
#define GL_COMPRESSED_SRGB8_ETC2 0x9275
#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9277
#define GL_MAX_ELEMENT_INDEX 0x8D6B
#define GL_PRIMITIVE_RESTART_FIXED_INDEX 0x8D69

#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS 0x9314
#define GL_FRAMEBUFFER_DEFAULT_HEIGHT 0x9311
#define GL_FRAMEBUFFER_DEFAULT_LAYERS 0x9312
#define GL_FRAMEBUFFER_DEFAULT_SAMPLES 0x9313
#define GL_FRAMEBUFFER_DEFAULT_WIDTH 0x9310
#define GL_MAX_FRAMEBUFFER_HEIGHT 0x9316
#define GL_MAX_FRAMEBUFFER_LAYERS 0x9317
#define GL_MAX_FRAMEBUFFER_SAMPLES 0x9318
#define GL_MAX_FRAMEBUFFER_WIDTH 0x9315

#define GL_DEPTH_STENCIL_TEXTURE_MODE 0x90EA

#define GL_BUFFER 0x82E0
#define GL_CONTEXT_FLAG_DEBUG_BIT 0x00000002
#define GL_DEBUG_CALLBACK_FUNCTION 0x8244
#define GL_DEBUG_CALLBACK_USER_PARAM 0x8245
#define GL_DEBUG_GROUP_STACK_DEPTH 0x826D
#define GL_DEBUG_LOGGED_MESSAGES 0x9145
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH 0x8243
#define GL_DEBUG_OUTPUT 0x92E0
#define GL_DEBUG_OUTPUT_SYNCHRONOUS 0x8242
#define GL_DEBUG_SEVERITY_HIGH 0x9146
#define GL_DEBUG_SEVERITY_LOW 0x9148
#define GL_DEBUG_SEVERITY_MEDIUM 0x9147
#define GL_DEBUG_SEVERITY_NOTIFICATION 0x826B
#define GL_DEBUG_SOURCE_API 0x8246
#define GL_DEBUG_SOURCE_APPLICATION 0x824A
#define GL_DEBUG_SOURCE_OTHER 0x824B
#define GL_DEBUG_SOURCE_SHADER_COMPILER 0x8248
#define GL_DEBUG_SOURCE_THIRD_PARTY 0x8249
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM 0x8247
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR 0x824D
#define GL_DEBUG_TYPE_ERROR 0x824C
#define GL_DEBUG_TYPE_MARKER 0x8268
#define GL_DEBUG_TYPE_OTHER 0x8251
#define GL_DEBUG_TYPE_PERFORMANCE 0x8250
#define GL_DEBUG_TYPE_POP_GROUP 0x826A
#define GL_DEBUG_TYPE_PORTABILITY 0x824F
#define GL_DEBUG_TYPE_PUSH_GROUP 0x8269
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR 0x824E
#define GL_DISPLAY_LIST 0x82E7
#define GL_MAX_DEBUG_GROUP_STACK_DEPTH 0x826C
#define GL_MAX_DEBUG_LOGGED_MESSAGES 0x9144
#define GL_MAX_DEBUG_MESSAGE_LENGTH 0x9143
#define GL_MAX_LABEL_LENGTH 0x82E8
#define GL_PROGRAM 0x82E2
#define GL_PROGRAM_PIPELINE 0x82E4
#define GL_QUERY 0x82E3
#define GL_SAMPLER 0x82E6
#define GL_SHADER 0x82E1
#define GL_STACK_OVERFLOW 0x0503
#define GL_STACK_UNDERFLOW 0x0504
#define GL_VERTEX_ARRAY 0x8074
/*Copied GL_VERTEX_ARRAY From: KHR_debug*/

#define GL_ALPHA 0x1906
#define GL_ALWAYS 0x0207
#define GL_AND 0x1501
#define GL_AND_INVERTED 0x1504
#define GL_AND_REVERSE 0x1502
#define GL_BACK 0x0405
#define GL_BACK_LEFT 0x0402
#define GL_BACK_RIGHT 0x0403
#define GL_BLEND 0x0BE2
#define GL_BLEND_DST 0x0BE0
#define GL_BLEND_SRC 0x0BE1
#define GL_BLUE 0x1905
#define GL_BYTE 0x1400
#define GL_CCW 0x0901
#define GL_CLEAR 0x1500
#define GL_COLOR 0x1800
#define GL_COLOR_BUFFER_BIT 0x00004000
#define GL_COLOR_CLEAR_VALUE 0x0C22
#define GL_COLOR_LOGIC_OP 0x0BF2
#define GL_COLOR_WRITEMASK 0x0C23
#define GL_COPY 0x1503
#define GL_COPY_INVERTED 0x150C
#define GL_CULL_FACE 0x0B44
#define GL_CULL_FACE_MODE 0x0B45
#define GL_CW 0x0900
#define GL_DECR 0x1E03
#define GL_DEPTH 0x1801
#define GL_DEPTH_BUFFER_BIT 0x00000100
#define GL_DEPTH_CLEAR_VALUE 0x0B73
#define GL_DEPTH_COMPONENT 0x1902
#define GL_DEPTH_FUNC 0x0B74
/*Copied GL_DEPTH_RANGE From: ARB_viewport_array*/
#define GL_DEPTH_TEST 0x0B71
#define GL_DEPTH_WRITEMASK 0x0B72
#define GL_DITHER 0x0BD0
#define GL_DONT_CARE 0x1100
#define GL_DOUBLE 0x140A
#define GL_DOUBLEBUFFER 0x0C32
#define GL_DRAW_BUFFER 0x0C01
#define GL_DST_ALPHA 0x0304
#define GL_DST_COLOR 0x0306
#define GL_EQUAL 0x0202
#define GL_EQUIV 0x1509
#define GL_EXTENSIONS 0x1F03
#define GL_FALSE 0
#define GL_FASTEST 0x1101
#define GL_FILL 0x1B02
#define GL_FLOAT 0x1406
#define GL_FRONT 0x0404
#define GL_FRONT_AND_BACK 0x0408
#define GL_FRONT_FACE 0x0B46
#define GL_FRONT_LEFT 0x0400
#define GL_FRONT_RIGHT 0x0401
#define GL_GEQUAL 0x0206
#define GL_GREATER 0x0204
#define GL_GREEN 0x1904
#define GL_INCR 0x1E02
#define GL_INT 0x1404
#define GL_INVALID_ENUM 0x0500
#define GL_INVALID_OPERATION 0x0502
#define GL_INVALID_VALUE 0x0501
#define GL_INVERT 0x150A
#define GL_KEEP 0x1E00
#define GL_LEFT 0x0406
#define GL_LEQUAL 0x0203
#define GL_LESS 0x0201
#define GL_LINE 0x1B01
#define GL_LINEAR 0x2601
#define GL_LINEAR_MIPMAP_LINEAR 0x2703
#define GL_LINEAR_MIPMAP_NEAREST 0x2701
#define GL_LINES 0x0001
#define GL_LINE_LOOP 0x0002
#define GL_LINE_SMOOTH 0x0B20
#define GL_LINE_SMOOTH_HINT 0x0C52
#define GL_LINE_STRIP 0x0003
#define GL_LINE_WIDTH 0x0B21
#define GL_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_LINE_WIDTH_RANGE 0x0B22
#define GL_LOGIC_OP_MODE 0x0BF0
#define GL_MAX_TEXTURE_SIZE 0x0D33
#define GL_MAX_VIEWPORT_DIMS 0x0D3A
#define GL_NAND 0x150E
#define GL_NEAREST 0x2600
#define GL_NEAREST_MIPMAP_LINEAR 0x2702
#define GL_NEAREST_MIPMAP_NEAREST 0x2700
#define GL_NEVER 0x0200
#define GL_NICEST 0x1102
#define GL_NONE 0
#define GL_NOOP 0x1505
#define GL_NOR 0x1508
#define GL_NOTEQUAL 0x0205
#define GL_NO_ERROR 0
#define GL_ONE 1
#define GL_ONE_MINUS_DST_ALPHA 0x0305
#define GL_ONE_MINUS_DST_COLOR 0x0307
#define GL_ONE_MINUS_SRC_ALPHA 0x0303
#define GL_ONE_MINUS_SRC_COLOR 0x0301
#define GL_OR 0x1507
#define GL_OR_INVERTED 0x150D
#define GL_OR_REVERSE 0x150B
#define GL_OUT_OF_MEMORY 0x0505
#define GL_PACK_ALIGNMENT 0x0D05
#define GL_PACK_LSB_FIRST 0x0D01
#define GL_PACK_ROW_LENGTH 0x0D02
#define GL_PACK_SKIP_PIXELS 0x0D04
#define GL_PACK_SKIP_ROWS 0x0D03
#define GL_PACK_SWAP_BYTES 0x0D00
#define GL_POINT 0x1B00
#define GL_POINTS 0x0000
#define GL_POINT_SIZE 0x0B11
#define GL_POINT_SIZE_GRANULARITY 0x0B13
#define GL_POINT_SIZE_RANGE 0x0B12
#define GL_POLYGON_MODE 0x0B40
#define GL_POLYGON_OFFSET_FACTOR 0x8038
#define GL_POLYGON_OFFSET_FILL 0x8037
#define GL_POLYGON_OFFSET_LINE 0x2A02
#define GL_POLYGON_OFFSET_POINT 0x2A01
#define GL_POLYGON_OFFSET_UNITS 0x2A00
#define GL_POLYGON_SMOOTH 0x0B41
#define GL_POLYGON_SMOOTH_HINT 0x0C53
#define GL_PROXY_TEXTURE_1D 0x8063
#define GL_PROXY_TEXTURE_2D 0x8064
#define GL_R3_G3_B2 0x2A10
#define GL_READ_BUFFER 0x0C02
#define GL_RED 0x1903
#define GL_RENDERER 0x1F01
#define GL_REPEAT 0x2901
#define GL_REPLACE 0x1E01
#define GL_RGB 0x1907
#define GL_RGB10 0x8052
#define GL_RGB10_A2 0x8059
#define GL_RGB12 0x8053
#define GL_RGB16 0x8054
#define GL_RGB4 0x804F
#define GL_RGB5 0x8050
#define GL_RGB5_A1 0x8057
#define GL_RGB8 0x8051
#define GL_RGBA 0x1908
#define GL_RGBA12 0x805A
#define GL_RGBA16 0x805B
#define GL_RGBA2 0x8055
#define GL_RGBA4 0x8056
#define GL_RGBA8 0x8058
#define GL_RIGHT 0x0407
/*Copied GL_SCISSOR_BOX From: ARB_viewport_array*/
/*Copied GL_SCISSOR_TEST From: ARB_viewport_array*/
#define GL_SET 0x150F
#define GL_SHORT 0x1402
#define GL_SRC_ALPHA 0x0302
#define GL_SRC_ALPHA_SATURATE 0x0308
#define GL_SRC_COLOR 0x0300
#define GL_STENCIL 0x1802
#define GL_STENCIL_BUFFER_BIT 0x00000400
#define GL_STENCIL_CLEAR_VALUE 0x0B91
#define GL_STENCIL_FAIL 0x0B94
#define GL_STENCIL_FUNC 0x0B92
#define GL_STENCIL_INDEX 0x1901
#define GL_STENCIL_PASS_DEPTH_FAIL 0x0B95
#define GL_STENCIL_PASS_DEPTH_PASS 0x0B96
#define GL_STENCIL_REF 0x0B97
#define GL_STENCIL_TEST 0x0B90
#define GL_STENCIL_VALUE_MASK 0x0B93
#define GL_STENCIL_WRITEMASK 0x0B98
#define GL_STEREO 0x0C33
#define GL_SUBPIXEL_BITS 0x0D50
#define GL_TEXTURE 0x1702
/*Copied GL_TEXTURE_1D From: ARB_internalformat_query2*/
/*Copied GL_TEXTURE_2D From: ARB_internalformat_query2*/
#define GL_TEXTURE_ALPHA_SIZE 0x805F
#define GL_TEXTURE_BINDING_1D 0x8068
#define GL_TEXTURE_BINDING_2D 0x8069
#define GL_TEXTURE_BLUE_SIZE 0x805E
#define GL_TEXTURE_BORDER_COLOR 0x1004
#define GL_TEXTURE_GREEN_SIZE 0x805D
#define GL_TEXTURE_HEIGHT 0x1001
#define GL_TEXTURE_INTERNAL_FORMAT 0x1003
#define GL_TEXTURE_MAG_FILTER 0x2800
#define GL_TEXTURE_MIN_FILTER 0x2801
#define GL_TEXTURE_RED_SIZE 0x805C
#define GL_TEXTURE_WIDTH 0x1000
#define GL_TEXTURE_WRAP_S 0x2802
#define GL_TEXTURE_WRAP_T 0x2803
#define GL_TRIANGLES 0x0004
#define GL_TRIANGLE_FAN 0x0006
#define GL_TRIANGLE_STRIP 0x0005
#define GL_TRUE 1
#define GL_UNPACK_ALIGNMENT 0x0CF5
#define GL_UNPACK_LSB_FIRST 0x0CF1
#define GL_UNPACK_ROW_LENGTH 0x0CF2
#define GL_UNPACK_SKIP_PIXELS 0x0CF4
#define GL_UNPACK_SKIP_ROWS 0x0CF3
#define GL_UNPACK_SWAP_BYTES 0x0CF0
#define GL_UNSIGNED_BYTE 0x1401
#define GL_UNSIGNED_INT 0x1405
#define GL_UNSIGNED_SHORT 0x1403
#define GL_VENDOR 0x1F00
#define GL_VERSION 0x1F02
/*Copied GL_VIEWPORT From: ARB_viewport_array*/
#define GL_XOR 0x1506
#define GL_ZERO 0

#define GL_ALIASED_LINE_WIDTH_RANGE 0x846E
#define GL_BGR 0x80E0
#define GL_BGRA 0x80E1
#define GL_CLAMP_TO_EDGE 0x812F
#define GL_MAX_3D_TEXTURE_SIZE 0x8073
#define GL_MAX_ELEMENTS_INDICES 0x80E9
#define GL_MAX_ELEMENTS_VERTICES 0x80E8
#define GL_PACK_IMAGE_HEIGHT 0x806C
#define GL_PACK_SKIP_IMAGES 0x806B
#define GL_PROXY_TEXTURE_3D 0x8070
#define GL_SMOOTH_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_SMOOTH_LINE_WIDTH_RANGE 0x0B22
#define GL_SMOOTH_POINT_SIZE_GRANULARITY 0x0B13
#define GL_SMOOTH_POINT_SIZE_RANGE 0x0B12
/*Copied GL_TEXTURE_3D From: ARB_internalformat_query2*/
#define GL_TEXTURE_BASE_LEVEL 0x813C
#define GL_TEXTURE_BINDING_3D 0x806A
#define GL_TEXTURE_DEPTH 0x8071
#define GL_TEXTURE_MAX_LEVEL 0x813D
#define GL_TEXTURE_MAX_LOD 0x813B
#define GL_TEXTURE_MIN_LOD 0x813A
#define GL_TEXTURE_WRAP_R 0x8072
#define GL_UNPACK_IMAGE_HEIGHT 0x806E
#define GL_UNPACK_SKIP_IMAGES 0x806D
#define GL_UNSIGNED_BYTE_2_3_3_REV 0x8362
#define GL_UNSIGNED_BYTE_3_3_2 0x8032
#define GL_UNSIGNED_INT_10_10_10_2 0x8036
#define GL_UNSIGNED_INT_2_10_10_10_REV 0x8368
#define GL_UNSIGNED_INT_8_8_8_8 0x8035
#define GL_UNSIGNED_INT_8_8_8_8_REV 0x8367
#define GL_UNSIGNED_SHORT_1_5_5_5_REV 0x8366
#define GL_UNSIGNED_SHORT_4_4_4_4 0x8033
#define GL_UNSIGNED_SHORT_4_4_4_4_REV 0x8365
#define GL_UNSIGNED_SHORT_5_5_5_1 0x8034
#define GL_UNSIGNED_SHORT_5_6_5 0x8363
#define GL_UNSIGNED_SHORT_5_6_5_REV 0x8364

#define GL_ACTIVE_TEXTURE 0x84E0
#define GL_CLAMP_TO_BORDER 0x812D
#define GL_COMPRESSED_RGB 0x84ED
#define GL_COMPRESSED_RGBA 0x84EE
#define GL_COMPRESSED_TEXTURE_FORMATS 0x86A3
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE 0x851C
#define GL_MULTISAMPLE 0x809D
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS 0x86A2
#define GL_PROXY_TEXTURE_CUBE_MAP 0x851B
/*Copied GL_SAMPLES From: ARB_internalformat_query2*/
#define GL_SAMPLE_ALPHA_TO_COVERAGE 0x809E
#define GL_SAMPLE_ALPHA_TO_ONE 0x809F
#define GL_SAMPLE_BUFFERS 0x80A8
#define GL_SAMPLE_COVERAGE 0x80A0
#define GL_SAMPLE_COVERAGE_INVERT 0x80AB
#define GL_SAMPLE_COVERAGE_VALUE 0x80AA
#define GL_TEXTURE0 0x84C0
#define GL_TEXTURE1 0x84C1
#define GL_TEXTURE10 0x84CA
#define GL_TEXTURE11 0x84CB
#define GL_TEXTURE12 0x84CC
#define GL_TEXTURE13 0x84CD
#define GL_TEXTURE14 0x84CE
#define GL_TEXTURE15 0x84CF
#define GL_TEXTURE16 0x84D0
#define GL_TEXTURE17 0x84D1
#define GL_TEXTURE18 0x84D2
#define GL_TEXTURE19 0x84D3
#define GL_TEXTURE2 0x84C2
#define GL_TEXTURE20 0x84D4
#define GL_TEXTURE21 0x84D5
#define GL_TEXTURE22 0x84D6
#define GL_TEXTURE23 0x84D7
#define GL_TEXTURE24 0x84D8
#define GL_TEXTURE25 0x84D9
#define GL_TEXTURE26 0x84DA
#define GL_TEXTURE27 0x84DB
#define GL_TEXTURE28 0x84DC
#define GL_TEXTURE29 0x84DD
#define GL_TEXTURE3 0x84C3
#define GL_TEXTURE30 0x84DE
#define GL_TEXTURE31 0x84DF
#define GL_TEXTURE4 0x84C4
#define GL_TEXTURE5 0x84C5
#define GL_TEXTURE6 0x84C6
#define GL_TEXTURE7 0x84C7
#define GL_TEXTURE8 0x84C8
#define GL_TEXTURE9 0x84C9
#define GL_TEXTURE_BINDING_CUBE_MAP 0x8514
/*Copied GL_TEXTURE_COMPRESSED From: ARB_internalformat_query2*/
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE 0x86A0
#define GL_TEXTURE_COMPRESSION_HINT 0x84EF
/*Copied GL_TEXTURE_CUBE_MAP From: ARB_internalformat_query2*/
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X 0x8516
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y 0x8518
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z 0x851A
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X 0x8515
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y 0x8517
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z 0x8519

#define GL_BLEND_COLOR 0x8005
#define GL_BLEND_DST_ALPHA 0x80CA
#define GL_BLEND_DST_RGB 0x80C8
#define GL_BLEND_EQUATION 0x8009
#define GL_BLEND_SRC_ALPHA 0x80CB
#define GL_BLEND_SRC_RGB 0x80C9
#define GL_CONSTANT_ALPHA 0x8003
#define GL_CONSTANT_COLOR 0x8001
#define GL_DECR_WRAP 0x8508
#define GL_DEPTH_COMPONENT16 0x81A5
#define GL_DEPTH_COMPONENT24 0x81A6
#define GL_DEPTH_COMPONENT32 0x81A7
#define GL_FUNC_ADD 0x8006
#define GL_FUNC_REVERSE_SUBTRACT 0x800B
#define GL_FUNC_SUBTRACT 0x800A
#define GL_INCR_WRAP 0x8507
#define GL_MAX 0x8008
#define GL_MAX_TEXTURE_LOD_BIAS 0x84FD
#define GL_MIN 0x8007
#define GL_MIRRORED_REPEAT 0x8370
#define GL_ONE_MINUS_CONSTANT_ALPHA 0x8004
#define GL_ONE_MINUS_CONSTANT_COLOR 0x8002
#define GL_POINT_FADE_THRESHOLD_SIZE 0x8128
#define GL_TEXTURE_COMPARE_FUNC 0x884D
#define GL_TEXTURE_COMPARE_MODE 0x884C
#define GL_TEXTURE_DEPTH_SIZE 0x884A
#define GL_TEXTURE_LOD_BIAS 0x8501

#define GL_ARRAY_BUFFER 0x8892
#define GL_ARRAY_BUFFER_BINDING 0x8894
#define GL_BUFFER_ACCESS 0x88BB
#define GL_BUFFER_MAPPED 0x88BC
#define GL_BUFFER_MAP_POINTER 0x88BD
#define GL_BUFFER_SIZE 0x8764
#define GL_BUFFER_USAGE 0x8765
#define GL_CURRENT_QUERY 0x8865
#define GL_DYNAMIC_COPY 0x88EA
#define GL_DYNAMIC_DRAW 0x88E8
#define GL_DYNAMIC_READ 0x88E9
#define GL_ELEMENT_ARRAY_BUFFER 0x8893
#define GL_ELEMENT_ARRAY_BUFFER_BINDING 0x8895
#define GL_QUERY_COUNTER_BITS 0x8864
#define GL_QUERY_RESULT 0x8866
#define GL_QUERY_RESULT_AVAILABLE 0x8867
#define GL_READ_ONLY 0x88B8
#define GL_READ_WRITE 0x88BA
#define GL_SAMPLES_PASSED 0x8914
#define GL_SRC1_ALPHA 0x8589
#define GL_STATIC_COPY 0x88E6
#define GL_STATIC_DRAW 0x88E4
#define GL_STATIC_READ 0x88E5
#define GL_STREAM_COPY 0x88E2
#define GL_STREAM_DRAW 0x88E0
#define GL_STREAM_READ 0x88E1
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING 0x889F
#define GL_WRITE_ONLY 0x88B9

#define GL_ACTIVE_ATTRIBUTES 0x8B89
#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH 0x8B8A
#define GL_ACTIVE_UNIFORMS 0x8B86
#define GL_ACTIVE_UNIFORM_MAX_LENGTH 0x8B87
#define GL_ATTACHED_SHADERS 0x8B85
#define GL_BLEND_EQUATION_ALPHA 0x883D
#define GL_BLEND_EQUATION_RGB 0x8009
#define GL_BOOL 0x8B56
#define GL_BOOL_VEC2 0x8B57
#define GL_BOOL_VEC3 0x8B58
#define GL_BOOL_VEC4 0x8B59
#define GL_COMPILE_STATUS 0x8B81
#define GL_CURRENT_PROGRAM 0x8B8D
#define GL_CURRENT_VERTEX_ATTRIB 0x8626
#define GL_DELETE_STATUS 0x8B80
#define GL_DRAW_BUFFER0 0x8825
#define GL_DRAW_BUFFER1 0x8826
#define GL_DRAW_BUFFER10 0x882F
#define GL_DRAW_BUFFER11 0x8830
#define GL_DRAW_BUFFER12 0x8831
#define GL_DRAW_BUFFER13 0x8832
#define GL_DRAW_BUFFER14 0x8833
#define GL_DRAW_BUFFER15 0x8834
#define GL_DRAW_BUFFER2 0x8827
#define GL_DRAW_BUFFER3 0x8828
#define GL_DRAW_BUFFER4 0x8829
#define GL_DRAW_BUFFER5 0x882A
#define GL_DRAW_BUFFER6 0x882B
#define GL_DRAW_BUFFER7 0x882C
#define GL_DRAW_BUFFER8 0x882D
#define GL_DRAW_BUFFER9 0x882E
#define GL_FLOAT_MAT2 0x8B5A
#define GL_FLOAT_MAT3 0x8B5B
#define GL_FLOAT_MAT4 0x8B5C
#define GL_FLOAT_VEC2 0x8B50
#define GL_FLOAT_VEC3 0x8B51
#define GL_FLOAT_VEC4 0x8B52
#define GL_FRAGMENT_SHADER 0x8B30
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT 0x8B8B
#define GL_INFO_LOG_LENGTH 0x8B84
#define GL_INT_VEC2 0x8B53
#define GL_INT_VEC3 0x8B54
#define GL_INT_VEC4 0x8B55
#define GL_LINK_STATUS 0x8B82
#define GL_LOWER_LEFT 0x8CA1
#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS 0x8B4D
#define GL_MAX_DRAW_BUFFERS 0x8824
#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS 0x8B49
#define GL_MAX_TEXTURE_IMAGE_UNITS 0x8872
#define GL_MAX_VARYING_FLOATS 0x8B4B
#define GL_MAX_VERTEX_ATTRIBS 0x8869
#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS 0x8B4C
#define GL_MAX_VERTEX_UNIFORM_COMPONENTS 0x8B4A
#define GL_POINT_SPRITE_COORD_ORIGIN 0x8CA0
#define GL_SAMPLER_1D 0x8B5D
#define GL_SAMPLER_1D_SHADOW 0x8B61
#define GL_SAMPLER_2D 0x8B5E
#define GL_SAMPLER_2D_SHADOW 0x8B62
#define GL_SAMPLER_3D 0x8B5F
#define GL_SAMPLER_CUBE 0x8B60
#define GL_SHADER_SOURCE_LENGTH 0x8B88
#define GL_SHADER_TYPE 0x8B4F
#define GL_SHADING_LANGUAGE_VERSION 0x8B8C
#define GL_STENCIL_BACK_FAIL 0x8801
#define GL_STENCIL_BACK_FUNC 0x8800
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL 0x8802
#define GL_STENCIL_BACK_PASS_DEPTH_PASS 0x8803
#define GL_STENCIL_BACK_REF 0x8CA3
#define GL_STENCIL_BACK_VALUE_MASK 0x8CA4
#define GL_STENCIL_BACK_WRITEMASK 0x8CA5
#define GL_UPPER_LEFT 0x8CA2
#define GL_VALIDATE_STATUS 0x8B83
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED 0x8622
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED 0x886A
#define GL_VERTEX_ATTRIB_ARRAY_POINTER 0x8645
#define GL_VERTEX_ATTRIB_ARRAY_SIZE 0x8623
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE 0x8624
#define GL_VERTEX_ATTRIB_ARRAY_TYPE 0x8625
#define GL_VERTEX_PROGRAM_POINT_SIZE 0x8642
#define GL_VERTEX_SHADER 0x8B31

#define GL_COMPRESSED_SRGB 0x8C48
#define GL_COMPRESSED_SRGB_ALPHA 0x8C49
#define GL_FLOAT_MAT2x3 0x8B65
#define GL_FLOAT_MAT2x4 0x8B66
#define GL_FLOAT_MAT3x2 0x8B67
#define GL_FLOAT_MAT3x4 0x8B68
#define GL_FLOAT_MAT4x2 0x8B69
#define GL_FLOAT_MAT4x3 0x8B6A
#define GL_PIXEL_PACK_BUFFER 0x88EB
#define GL_PIXEL_PACK_BUFFER_BINDING 0x88ED
#define GL_PIXEL_UNPACK_BUFFER 0x88EC
#define GL_PIXEL_UNPACK_BUFFER_BINDING 0x88EF
#define GL_SRGB 0x8C40
#define GL_SRGB8 0x8C41
#define GL_SRGB8_ALPHA8 0x8C43
#define GL_SRGB_ALPHA 0x8C42

#define GL_BGRA_INTEGER 0x8D9B
#define GL_BGR_INTEGER 0x8D9A
#define GL_BLUE_INTEGER 0x8D96
#define GL_BUFFER_ACCESS_FLAGS 0x911F
#define GL_BUFFER_MAP_LENGTH 0x9120
#define GL_BUFFER_MAP_OFFSET 0x9121
#define GL_CLAMP_READ_COLOR 0x891C
#define GL_CLIP_DISTANCE0 0x3000
#define GL_CLIP_DISTANCE1 0x3001
#define GL_CLIP_DISTANCE2 0x3002
#define GL_CLIP_DISTANCE3 0x3003
#define GL_CLIP_DISTANCE4 0x3004
#define GL_CLIP_DISTANCE5 0x3005
#define GL_CLIP_DISTANCE6 0x3006
#define GL_CLIP_DISTANCE7 0x3007
#define GL_COLOR_ATTACHMENT0 0x8CE0
#define GL_COLOR_ATTACHMENT1 0x8CE1
#define GL_COLOR_ATTACHMENT10 0x8CEA
#define GL_COLOR_ATTACHMENT11 0x8CEB
#define GL_COLOR_ATTACHMENT12 0x8CEC
#define GL_COLOR_ATTACHMENT13 0x8CED
#define GL_COLOR_ATTACHMENT14 0x8CEE
#define GL_COLOR_ATTACHMENT15 0x8CEF
#define GL_COLOR_ATTACHMENT2 0x8CE2
#define GL_COLOR_ATTACHMENT3 0x8CE3
#define GL_COLOR_ATTACHMENT4 0x8CE4
#define GL_COLOR_ATTACHMENT5 0x8CE5
#define GL_COLOR_ATTACHMENT6 0x8CE6
#define GL_COLOR_ATTACHMENT7 0x8CE7
#define GL_COLOR_ATTACHMENT8 0x8CE8
#define GL_COLOR_ATTACHMENT9 0x8CE9
#define GL_COMPARE_REF_TO_TEXTURE 0x884E
#define GL_COMPRESSED_RED 0x8225
#define GL_COMPRESSED_RED_RGTC1 0x8DBB
#define GL_COMPRESSED_RG 0x8226
#define GL_COMPRESSED_RG_RGTC2 0x8DBD
#define GL_COMPRESSED_SIGNED_RED_RGTC1 0x8DBC
#define GL_COMPRESSED_SIGNED_RG_RGTC2 0x8DBE
#define GL_CONTEXT_FLAGS 0x821E
#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT 0x00000001
#define GL_DEPTH24_STENCIL8 0x88F0
#define GL_DEPTH32F_STENCIL8 0x8CAD
#define GL_DEPTH_ATTACHMENT 0x8D00
#define GL_DEPTH_COMPONENT32F 0x8CAC
#define GL_DEPTH_STENCIL 0x84F9
#define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#define GL_DRAW_FRAMEBUFFER 0x8CA9
#define GL_DRAW_FRAMEBUFFER_BINDING 0x8CA6
#define GL_FIXED_ONLY 0x891D
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV 0x8DAD
#define GL_FRAMEBUFFER 0x8D40
#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#define GL_FRAMEBUFFER_BINDING 0x8CA6
#define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#define GL_FRAMEBUFFER_DEFAULT 0x8218
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#define GL_FRAMEBUFFER_SRGB 0x8DB9
#define GL_FRAMEBUFFER_UNDEFINED 0x8219
#define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#define GL_GREEN_INTEGER 0x8D95
#define GL_HALF_FLOAT 0x140B
#define GL_INTERLEAVED_ATTRIBS 0x8C8C
#define GL_INT_SAMPLER_1D 0x8DC9
#define GL_INT_SAMPLER_1D_ARRAY 0x8DCE
#define GL_INT_SAMPLER_2D 0x8DCA
#define GL_INT_SAMPLER_2D_ARRAY 0x8DCF
#define GL_INT_SAMPLER_3D 0x8DCB
#define GL_INT_SAMPLER_CUBE 0x8DCC
#define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#define GL_MAJOR_VERSION 0x821B
#define GL_MAP_FLUSH_EXPLICIT_BIT 0x0010
#define GL_MAP_INVALIDATE_BUFFER_BIT 0x0008
#define GL_MAP_INVALIDATE_RANGE_BIT 0x0004
#define GL_MAP_READ_BIT 0x0001
#define GL_MAP_UNSYNCHRONIZED_BIT 0x0020
#define GL_MAP_WRITE_BIT 0x0002
#define GL_MAX_ARRAY_TEXTURE_LAYERS 0x88FF
#define GL_MAX_CLIP_DISTANCES 0x0D32
#define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#define GL_MAX_PROGRAM_TEXEL_OFFSET 0x8905
#define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#define GL_MAX_SAMPLES 0x8D57
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS 0x8C8A
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS 0x8C8B
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS 0x8C80
#define GL_MAX_VARYING_COMPONENTS 0x8B4B
#define GL_MINOR_VERSION 0x821C
#define GL_MIN_PROGRAM_TEXEL_OFFSET 0x8904
#define GL_NUM_EXTENSIONS 0x821D
#define GL_PRIMITIVES_GENERATED 0x8C87
#define GL_PROXY_TEXTURE_1D_ARRAY 0x8C19
#define GL_PROXY_TEXTURE_2D_ARRAY 0x8C1B
#define GL_QUERY_BY_REGION_NO_WAIT 0x8E16
#define GL_QUERY_BY_REGION_WAIT 0x8E15
#define GL_QUERY_NO_WAIT 0x8E14
#define GL_QUERY_WAIT 0x8E13
#define GL_R11F_G11F_B10F 0x8C3A
#define GL_R16 0x822A
#define GL_R16F 0x822D
#define GL_R16I 0x8233
#define GL_R16UI 0x8234
#define GL_R32F 0x822E
#define GL_R32I 0x8235
#define GL_R32UI 0x8236
#define GL_R8 0x8229
#define GL_R8I 0x8231
#define GL_R8UI 0x8232
#define GL_RASTERIZER_DISCARD 0x8C89
#define GL_READ_FRAMEBUFFER 0x8CA8
#define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#define GL_RED_INTEGER 0x8D94
/*Copied GL_RENDERBUFFER From: ARB_internalformat_query2*/
#define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#define GL_RENDERBUFFER_BINDING 0x8CA7
#define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#define GL_RENDERBUFFER_HEIGHT 0x8D43
#define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#define GL_RENDERBUFFER_RED_SIZE 0x8D50
#define GL_RENDERBUFFER_SAMPLES 0x8CAB
#define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#define GL_RENDERBUFFER_WIDTH 0x8D42
#define GL_RG 0x8227
#define GL_RG16 0x822C
#define GL_RG16F 0x822F
#define GL_RG16I 0x8239
#define GL_RG16UI 0x823A
#define GL_RG32F 0x8230
#define GL_RG32I 0x823B
#define GL_RG32UI 0x823C
#define GL_RG8 0x822B
#define GL_RG8I 0x8237
#define GL_RG8UI 0x8238
#define GL_RGB16F 0x881B
#define GL_RGB16I 0x8D89
#define GL_RGB16UI 0x8D77
#define GL_RGB32F 0x8815
#define GL_RGB32I 0x8D83
#define GL_RGB32UI 0x8D71
#define GL_RGB8I 0x8D8F
#define GL_RGB8UI 0x8D7D
#define GL_RGB9_E5 0x8C3D
#define GL_RGBA16F 0x881A
#define GL_RGBA16I 0x8D88
#define GL_RGBA16UI 0x8D76
#define GL_RGBA32F 0x8814
#define GL_RGBA32I 0x8D82
#define GL_RGBA32UI 0x8D70
#define GL_RGBA8I 0x8D8E
#define GL_RGBA8UI 0x8D7C
#define GL_RGBA_INTEGER 0x8D99
#define GL_RGB_INTEGER 0x8D98
#define GL_RG_INTEGER 0x8228
#define GL_SAMPLER_1D_ARRAY 0x8DC0
#define GL_SAMPLER_1D_ARRAY_SHADOW 0x8DC3
#define GL_SAMPLER_2D_ARRAY 0x8DC1
#define GL_SAMPLER_2D_ARRAY_SHADOW 0x8DC4
#define GL_SAMPLER_CUBE_SHADOW 0x8DC5
#define GL_SEPARATE_ATTRIBS 0x8C8D
#define GL_STENCIL_ATTACHMENT 0x8D20
#define GL_STENCIL_INDEX1 0x8D46
#define GL_STENCIL_INDEX16 0x8D49
#define GL_STENCIL_INDEX4 0x8D47
#define GL_STENCIL_INDEX8 0x8D48
/*Copied GL_TEXTURE_1D_ARRAY From: ARB_internalformat_query2*/
/*Copied GL_TEXTURE_2D_ARRAY From: ARB_internalformat_query2*/
#define GL_TEXTURE_ALPHA_TYPE 0x8C13
#define GL_TEXTURE_BINDING_1D_ARRAY 0x8C1C
#define GL_TEXTURE_BINDING_2D_ARRAY 0x8C1D
#define GL_TEXTURE_BLUE_TYPE 0x8C12
#define GL_TEXTURE_DEPTH_TYPE 0x8C16
#define GL_TEXTURE_GREEN_TYPE 0x8C11
#define GL_TEXTURE_RED_TYPE 0x8C10
#define GL_TEXTURE_SHARED_SIZE 0x8C3F
#define GL_TEXTURE_STENCIL_SIZE 0x88F1
#define GL_TRANSFORM_FEEDBACK_BUFFER 0x8C8E
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING 0x8C8F
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE 0x8C7F
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE 0x8C85
#define GL_TRANSFORM_FEEDBACK_BUFFER_START 0x8C84
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN 0x8C88
#define GL_TRANSFORM_FEEDBACK_VARYINGS 0x8C83
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH 0x8C76
#define GL_UNSIGNED_INT_10F_11F_11F_REV 0x8C3B
#define GL_UNSIGNED_INT_24_8 0x84FA
#define GL_UNSIGNED_INT_5_9_9_9_REV 0x8C3E
#define GL_UNSIGNED_INT_SAMPLER_1D 0x8DD1
#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY 0x8DD6
#define GL_UNSIGNED_INT_SAMPLER_2D 0x8DD2
#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY 0x8DD7
#define GL_UNSIGNED_INT_SAMPLER_3D 0x8DD3
#define GL_UNSIGNED_INT_SAMPLER_CUBE 0x8DD4
#define GL_UNSIGNED_INT_VEC2 0x8DC6
#define GL_UNSIGNED_INT_VEC3 0x8DC7
#define GL_UNSIGNED_INT_VEC4 0x8DC8
#define GL_UNSIGNED_NORMALIZED 0x8C17
#define GL_VERTEX_ARRAY_BINDING 0x85B5
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER 0x88FD

#define GL_ACTIVE_UNIFORM_BLOCKS 0x8A36
#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH 0x8A35
#define GL_COPY_READ_BUFFER 0x8F36
#define GL_COPY_WRITE_BUFFER 0x8F37
#define GL_INT_SAMPLER_2D_RECT 0x8DCD
#define GL_INT_SAMPLER_BUFFER 0x8DD0
#define GL_INVALID_INDEX 0xFFFFFFFF
#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS 0x8A33
#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS 0x8A32
#define GL_MAX_COMBINED_UNIFORM_BLOCKS 0x8A2E
#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS 0x8A31
#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS 0x8A2D
#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS 0x8A2C
#define GL_MAX_RECTANGLE_TEXTURE_SIZE 0x84F8
#define GL_MAX_TEXTURE_BUFFER_SIZE 0x8C2B
#define GL_MAX_UNIFORM_BLOCK_SIZE 0x8A30
#define GL_MAX_UNIFORM_BUFFER_BINDINGS 0x8A2F
#define GL_MAX_VERTEX_UNIFORM_BLOCKS 0x8A2B
#define GL_PRIMITIVE_RESTART 0x8F9D
#define GL_PRIMITIVE_RESTART_INDEX 0x8F9E
#define GL_PROXY_TEXTURE_RECTANGLE 0x84F7
#define GL_R16_SNORM 0x8F98
#define GL_R8_SNORM 0x8F94
#define GL_RG16_SNORM 0x8F99
#define GL_RG8_SNORM 0x8F95
#define GL_RGB16_SNORM 0x8F9A
#define GL_RGB8_SNORM 0x8F96
#define GL_RGBA16_SNORM 0x8F9B
#define GL_RGBA8_SNORM 0x8F97
#define GL_SAMPLER_2D_RECT 0x8B63
#define GL_SAMPLER_2D_RECT_SHADOW 0x8B64
#define GL_SAMPLER_BUFFER 0x8DC2
#define GL_SIGNED_NORMALIZED 0x8F9C
#define GL_TEXTURE_BINDING_BUFFER 0x8C2C
#define GL_TEXTURE_BINDING_RECTANGLE 0x84F6
/*Copied GL_TEXTURE_BUFFER From: ARB_internalformat_query2*/
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING 0x8C2D
/*Copied GL_TEXTURE_RECTANGLE From: ARB_internalformat_query2*/
#define GL_UNIFORM_ARRAY_STRIDE 0x8A3C
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS 0x8A42
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES 0x8A43
#define GL_UNIFORM_BLOCK_BINDING 0x8A3F
#define GL_UNIFORM_BLOCK_DATA_SIZE 0x8A40
#define GL_UNIFORM_BLOCK_INDEX 0x8A3A
#define GL_UNIFORM_BLOCK_NAME_LENGTH 0x8A41
#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER 0x8A46
#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER 0x8A45
#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER 0x8A44
#define GL_UNIFORM_BUFFER 0x8A11
#define GL_UNIFORM_BUFFER_BINDING 0x8A28
#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT 0x8A34
#define GL_UNIFORM_BUFFER_SIZE 0x8A2A
#define GL_UNIFORM_BUFFER_START 0x8A29
#define GL_UNIFORM_IS_ROW_MAJOR 0x8A3E
#define GL_UNIFORM_MATRIX_STRIDE 0x8A3D
#define GL_UNIFORM_NAME_LENGTH 0x8A39
#define GL_UNIFORM_OFFSET 0x8A3B
#define GL_UNIFORM_SIZE 0x8A38
#define GL_UNIFORM_TYPE 0x8A37
#define GL_UNSIGNED_INT_SAMPLER_2D_RECT 0x8DD5
#define GL_UNSIGNED_INT_SAMPLER_BUFFER 0x8DD8

#define GL_ALREADY_SIGNALED 0x911A
#define GL_CONDITION_SATISFIED 0x911C
#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT 0x00000002
#define GL_CONTEXT_CORE_PROFILE_BIT 0x00000001
#define GL_CONTEXT_PROFILE_MASK 0x9126
#define GL_DEPTH_CLAMP 0x864F
/*Copied GL_FIRST_VERTEX_CONVENTION From: ARB_viewport_array*/
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED 0x8DA7
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS 0x8DA8
#define GL_GEOMETRY_INPUT_TYPE 0x8917
#define GL_GEOMETRY_OUTPUT_TYPE 0x8918
#define GL_GEOMETRY_SHADER 0x8DD9
#define GL_GEOMETRY_VERTICES_OUT 0x8916
#define GL_INT_SAMPLER_2D_MULTISAMPLE 0x9109
#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910C
/*Copied GL_LAST_VERTEX_CONVENTION From: ARB_viewport_array*/
#define GL_LINES_ADJACENCY 0x000A
#define GL_LINE_STRIP_ADJACENCY 0x000B
#define GL_MAX_COLOR_TEXTURE_SAMPLES 0x910E
#define GL_MAX_DEPTH_TEXTURE_SAMPLES 0x910F
#define GL_MAX_FRAGMENT_INPUT_COMPONENTS 0x9125
#define GL_MAX_GEOMETRY_INPUT_COMPONENTS 0x9123
#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS 0x9124
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES 0x8DE0
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS 0x8C29
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS 0x8DE1
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS 0x8DDF
#define GL_MAX_INTEGER_SAMPLES 0x9110
#define GL_MAX_SAMPLE_MASK_WORDS 0x8E59
#define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#define GL_MAX_VERTEX_OUTPUT_COMPONENTS 0x9122
#define GL_OBJECT_TYPE 0x9112
#define GL_PROGRAM_POINT_SIZE 0x8642
/*Copied GL_PROVOKING_VERTEX From: ARB_viewport_array*/
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE 0x9101
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9103
#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION 0x8E4C
#define GL_SAMPLER_2D_MULTISAMPLE 0x9108
#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910B
#define GL_SAMPLE_MASK 0x8E51
#define GL_SAMPLE_MASK_VALUE 0x8E52
#define GL_SAMPLE_POSITION 0x8E50
#define GL_SIGNALED 0x9119
#define GL_SYNC_CONDITION 0x9113
#define GL_SYNC_FENCE 0x9116
#define GL_SYNC_FLAGS 0x9115
#define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#define GL_SYNC_STATUS 0x9114
/*Copied GL_TEXTURE_2D_MULTISAMPLE From: ARB_internalformat_query2*/
/*Copied GL_TEXTURE_2D_MULTISAMPLE_ARRAY From: ARB_internalformat_query2*/
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE 0x9104
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY 0x9105
#define GL_TEXTURE_CUBE_MAP_SEAMLESS 0x884F
#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS 0x9107
#define GL_TEXTURE_SAMPLES 0x9106
#define GL_TIMEOUT_EXPIRED 0x911B
#define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFF
#define GL_TRIANGLES_ADJACENCY 0x000C
#define GL_TRIANGLE_STRIP_ADJACENCY 0x000D
#define GL_UNSIGNALED 0x9118
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE 0x910A
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910D
#define GL_WAIT_FAILED 0x911D

#define GL_ANY_SAMPLES_PASSED 0x8C2F
#define GL_INT_2_10_10_10_REV 0x8D9F
#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS 0x88FC
#define GL_ONE_MINUS_SRC1_ALPHA 0x88FB
#define GL_ONE_MINUS_SRC1_COLOR 0x88FA
#define GL_RGB10_A2UI 0x906F
#define GL_SAMPLER_BINDING 0x8919
#define GL_SRC1_COLOR 0x88F9
#define GL_TEXTURE_SWIZZLE_A 0x8E45
#define GL_TEXTURE_SWIZZLE_B 0x8E44
#define GL_TEXTURE_SWIZZLE_G 0x8E43
#define GL_TEXTURE_SWIZZLE_R 0x8E42
#define GL_TEXTURE_SWIZZLE_RGBA 0x8E46
#define GL_TIMESTAMP 0x8E28
#define GL_TIME_ELAPSED 0x88BF
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR 0x88FE






#ifndef GL_ARB_ES2_compatibility
#define GL_ARB_ES2_compatibility 1
extern void (CODEGEN_FUNCPTR *gl_ClearDepthf)(GLfloat);
#define glClearDepthf gl_ClearDepthf
extern void (CODEGEN_FUNCPTR *gl_DepthRangef)(GLfloat, GLfloat);
#define glDepthRangef gl_DepthRangef
extern void (CODEGEN_FUNCPTR *gl_GetShaderPrecisionFormat)(GLenum, GLenum, GLint *, GLint *);
#define glGetShaderPrecisionFormat gl_GetShaderPrecisionFormat
extern void (CODEGEN_FUNCPTR *gl_ReleaseShaderCompiler)();
#define glReleaseShaderCompiler gl_ReleaseShaderCompiler
extern void (CODEGEN_FUNCPTR *gl_ShaderBinary)(GLsizei, const GLuint *, GLenum, const void *, GLsizei);
#define glShaderBinary gl_ShaderBinary
#endif /*GL_ARB_ES2_compatibility*/ 

#ifndef GL_ARB_get_program_binary
#define GL_ARB_get_program_binary 1
extern void (CODEGEN_FUNCPTR *gl_GetProgramBinary)(GLuint, GLsizei, GLsizei *, GLenum *, void *);
#define glGetProgramBinary gl_GetProgramBinary
extern void (CODEGEN_FUNCPTR *gl_ProgramBinary)(GLuint, GLenum, const void *, GLsizei);
#define glProgramBinary gl_ProgramBinary
extern void (CODEGEN_FUNCPTR *gl_ProgramParameteri)(GLuint, GLenum, GLint);
#define glProgramParameteri gl_ProgramParameteri
#endif /*GL_ARB_get_program_binary*/ 


#ifndef GL_ARB_internalformat_query
#define GL_ARB_internalformat_query 1
extern void (CODEGEN_FUNCPTR *gl_GetInternalformativ)(GLenum, GLenum, GLenum, GLsizei, GLint *);
#define glGetInternalformativ gl_GetInternalformativ
#endif /*GL_ARB_internalformat_query*/ 

#ifndef GL_ARB_internalformat_query2
#define GL_ARB_internalformat_query2 1
extern void (CODEGEN_FUNCPTR *gl_GetInternalformati64v)(GLenum, GLenum, GLenum, GLsizei, GLint64 *);
#define glGetInternalformati64v gl_GetInternalformati64v
#endif /*GL_ARB_internalformat_query2*/ 


#ifndef GL_ARB_program_interface_query
#define GL_ARB_program_interface_query 1
extern void (CODEGEN_FUNCPTR *gl_GetProgramInterfaceiv)(GLuint, GLenum, GLenum, GLint *);
#define glGetProgramInterfaceiv gl_GetProgramInterfaceiv
extern GLuint (CODEGEN_FUNCPTR *gl_GetProgramResourceIndex)(GLuint, GLenum, const GLchar *);
#define glGetProgramResourceIndex gl_GetProgramResourceIndex
extern GLint (CODEGEN_FUNCPTR *gl_GetProgramResourceLocation)(GLuint, GLenum, const GLchar *);
#define glGetProgramResourceLocation gl_GetProgramResourceLocation
extern GLint (CODEGEN_FUNCPTR *gl_GetProgramResourceLocationIndex)(GLuint, GLenum, const GLchar *);
#define glGetProgramResourceLocationIndex gl_GetProgramResourceLocationIndex
extern void (CODEGEN_FUNCPTR *gl_GetProgramResourceName)(GLuint, GLenum, GLuint, GLsizei, GLsizei *, GLchar *);
#define glGetProgramResourceName gl_GetProgramResourceName
extern void (CODEGEN_FUNCPTR *gl_GetProgramResourceiv)(GLuint, GLenum, GLuint, GLsizei, const GLenum *, GLsizei, GLsizei *, GLint *);
#define glGetProgramResourceiv gl_GetProgramResourceiv
#endif /*GL_ARB_program_interface_query*/ 

#ifndef GL_ARB_separate_shader_objects
#define GL_ARB_separate_shader_objects 1
extern void (CODEGEN_FUNCPTR *gl_ActiveShaderProgram)(GLuint, GLuint);
#define glActiveShaderProgram gl_ActiveShaderProgram
extern void (CODEGEN_FUNCPTR *gl_BindProgramPipeline)(GLuint);
#define glBindProgramPipeline gl_BindProgramPipeline
extern GLuint (CODEGEN_FUNCPTR *gl_CreateShaderProgramv)(GLenum, GLsizei, const GLchar *const*);
#define glCreateShaderProgramv gl_CreateShaderProgramv
extern void (CODEGEN_FUNCPTR *gl_DeleteProgramPipelines)(GLsizei, const GLuint *);
#define glDeleteProgramPipelines gl_DeleteProgramPipelines
extern void (CODEGEN_FUNCPTR *gl_GenProgramPipelines)(GLsizei, GLuint *);
#define glGenProgramPipelines gl_GenProgramPipelines
extern void (CODEGEN_FUNCPTR *gl_GetProgramPipelineInfoLog)(GLuint, GLsizei, GLsizei *, GLchar *);
#define glGetProgramPipelineInfoLog gl_GetProgramPipelineInfoLog
extern void (CODEGEN_FUNCPTR *gl_GetProgramPipelineiv)(GLuint, GLenum, GLint *);
#define glGetProgramPipelineiv gl_GetProgramPipelineiv
extern GLboolean (CODEGEN_FUNCPTR *gl_IsProgramPipeline)(GLuint);
#define glIsProgramPipeline gl_IsProgramPipeline
extern void (CODEGEN_FUNCPTR *gl_ProgramUniform1d)(GLuint, GLint, GLdouble);
#define glProgramUniform1d gl_ProgramUniform1d
extern void (CODEGEN_FUNCPTR *gl_ProgramUniform1dv)(GLuint, GLint, GLsizei, const GLdouble *);
#define glProgramUniform1dv gl_ProgramUniform1dv
extern void (CODEGEN_FUNCPTR *gl_ProgramUniform1f)(GLuint, GLint, GLfloat);
#define glProgramUniform1f gl_ProgramUniform1f
extern void (CODEGEN_FUNCPTR *gl_ProgramUniform1fv)(GLuint, GLint, GLsizei, const GLfloat *);
#define glProgramUniform1fv gl_ProgramUniform1fv
extern void (CODEGEN_FUNCPTR *gl_ProgramUniform1i)(GLuint, GLint, GLint);
#define glProgramUniform1i gl_ProgramUniform1i
extern void (CODEGEN_FUNCPTR *gl_ProgramUniform1iv)(GLuint, GLint, GLsizei, const GLint *);
#define glProgramUniform1iv gl_ProgramUniform1iv
extern void (CODEGEN_FUNCPTR *gl_ProgramUniform1ui)(GLuint, GLint, GLuint);
#define glProgramUniform1ui gl_ProgramUniform1ui
extern void (CODEGEN_FUNCPTR *gl_ProgramUniform1uiv)(GLuint, GLint, GLsizei, const GLuint *);
#define glProgramUniform1uiv gl_ProgramUniform1uiv
extern void (CODEGEN_FUNCPTR *gl_ProgramUniform2d)(GLuint, GLint, GLdouble, GLdouble);
#define glProgramUniform2d gl_ProgramUniform2d
extern void (CODEGEN_FUNCPTR *gl_ProgramUniform2dv)(GLuint, GLint, GLsizei, const GLdouble *);
#define glProgramUniform2dv gl_ProgramUniform2dv
extern void (CODEGEN_FUNCPTR *gl_ProgramUniform2f)(GLuint, GLint, GLfloat, GLfloat);
#define glProgramUniform2f gl_ProgramUniform2f
extern void (CODEGEN_FUNCPTR *gl_ProgramUniform2fv)(GLuint, GLint, GLsizei, const GLfloat *);
#define glProgramUniform2fv gl_ProgramUniform2fv
extern void (CODEGEN_FUNCPTR *gl_ProgramUniform2i)(GLuint, GLint, GLint, GLint);
#define glProgramUniform2i gl_ProgramUniform2i
extern void (CODEGEN_FUNCPTR *gl_ProgramUniform2iv)(GLuint, GLint, GLsizei, const GLint *);
#define glProgramUniform2iv gl_ProgramUniform2iv
extern void (CODEGEN_FUNCPTR *gl_ProgramUniform2ui)(GLuint, GLint, GLuint, GLuint);
#define glProgramUniform2ui gl_ProgramUniform2ui
extern void (CODEGEN_FUNCPTR *gl_ProgramUniform2uiv)(GLuint, GLint, GLsizei, const GLuint *);
#define glProgramUniform2uiv gl_ProgramUniform2uiv
extern void (CODEGEN_FUNCPTR *gl_ProgramUniform3d)(GLuint, GLint, GLdouble, GLdouble, GLdouble);
#define glProgramUniform3d gl_ProgramUniform3d
extern void (CODEGEN_FUNCPTR *gl_ProgramUniform3dv)(GLuint, GLint, GLsizei, const GLdouble *);
#define glProgramUniform3dv gl_ProgramUniform3dv
extern void (CODEGEN_FUNCPTR *gl_ProgramUniform3f)(GLuint, GLint, GLfloat, GLfloat, GLfloat);
#define glProgramUniform3f gl_ProgramUniform3f
extern void (CODEGEN_FUNCPTR *gl_ProgramUniform3fv)(GLuint, GLint, GLsizei, const GLfloat *);
#define glProgramUniform3fv gl_ProgramUniform3fv
extern void (CODEGEN_FUNCPTR *gl_ProgramUniform3i)(GLuint, GLint, GLint, GLint, GLint);
#define glProgramUniform3i gl_ProgramUniform3i
extern void (CODEGEN_FUNCPTR *gl_ProgramUniform3iv)(GLuint, GLint, GLsizei, const GLint *);
#define glProgramUniform3iv gl_ProgramUniform3iv
extern void (CODEGEN_FUNCPTR *gl_ProgramUniform3ui)(GLuint, GLint, GLuint, GLuint, GLuint);
#define glProgramUniform3ui gl_ProgramUniform3ui
extern void (CODEGEN_FUNCPTR *gl_ProgramUniform3uiv)(GLuint, GLint, GLsizei, const GLuint *);
#define glProgramUniform3uiv gl_ProgramUniform3uiv
extern void (CODEGEN_FUNCPTR *gl_ProgramUniform4d)(GLuint, GLint, GLdouble, GLdouble, GLdouble, GLdouble);
#define glProgramUniform4d gl_ProgramUniform4d
extern void (CODEGEN_FUNCPTR *gl_ProgramUniform4dv)(GLuint, GLint, GLsizei, const GLdouble *);
#define glProgramUniform4dv gl_ProgramUniform4dv
extern void (CODEGEN_FUNCPTR *gl_ProgramUniform4f)(GLuint, GLint, GLfloat, GLfloat, GLfloat, GLfloat);
#define glProgramUniform4f gl_ProgramUniform4f
extern void (CODEGEN_FUNCPTR *gl_ProgramUniform4fv)(GLuint, GLint, GLsizei, const GLfloat *);
#define glProgramUniform4fv gl_ProgramUniform4fv
extern void (CODEGEN_FUNCPTR *gl_ProgramUniform4i)(GLuint, GLint, GLint, GLint, GLint, GLint);
#define glProgramUniform4i gl_ProgramUniform4i
extern void (CODEGEN_FUNCPTR *gl_ProgramUniform4iv)(GLuint, GLint, GLsizei, const GLint *);
#define glProgramUniform4iv gl_ProgramUniform4iv
extern void (CODEGEN_FUNCPTR *gl_ProgramUniform4ui)(GLuint, GLint, GLuint, GLuint, GLuint, GLuint);
#define glProgramUniform4ui gl_ProgramUniform4ui
extern void (CODEGEN_FUNCPTR *gl_ProgramUniform4uiv)(GLuint, GLint, GLsizei, const GLuint *);
#define glProgramUniform4uiv gl_ProgramUniform4uiv
extern void (CODEGEN_FUNCPTR *gl_ProgramUniformMatrix2dv)(GLuint, GLint, GLsizei, GLboolean, const GLdouble *);
#define glProgramUniformMatrix2dv gl_ProgramUniformMatrix2dv
extern void (CODEGEN_FUNCPTR *gl_ProgramUniformMatrix2fv)(GLuint, GLint, GLsizei, GLboolean, const GLfloat *);
#define glProgramUniformMatrix2fv gl_ProgramUniformMatrix2fv
extern void (CODEGEN_FUNCPTR *gl_ProgramUniformMatrix2x3dv)(GLuint, GLint, GLsizei, GLboolean, const GLdouble *);
#define glProgramUniformMatrix2x3dv gl_ProgramUniformMatrix2x3dv
extern void (CODEGEN_FUNCPTR *gl_ProgramUniformMatrix2x3fv)(GLuint, GLint, GLsizei, GLboolean, const GLfloat *);
#define glProgramUniformMatrix2x3fv gl_ProgramUniformMatrix2x3fv
extern void (CODEGEN_FUNCPTR *gl_ProgramUniformMatrix2x4dv)(GLuint, GLint, GLsizei, GLboolean, const GLdouble *);
#define glProgramUniformMatrix2x4dv gl_ProgramUniformMatrix2x4dv
extern void (CODEGEN_FUNCPTR *gl_ProgramUniformMatrix2x4fv)(GLuint, GLint, GLsizei, GLboolean, const GLfloat *);
#define glProgramUniformMatrix2x4fv gl_ProgramUniformMatrix2x4fv
extern void (CODEGEN_FUNCPTR *gl_ProgramUniformMatrix3dv)(GLuint, GLint, GLsizei, GLboolean, const GLdouble *);
#define glProgramUniformMatrix3dv gl_ProgramUniformMatrix3dv
extern void (CODEGEN_FUNCPTR *gl_ProgramUniformMatrix3fv)(GLuint, GLint, GLsizei, GLboolean, const GLfloat *);
#define glProgramUniformMatrix3fv gl_ProgramUniformMatrix3fv
extern void (CODEGEN_FUNCPTR *gl_ProgramUniformMatrix3x2dv)(GLuint, GLint, GLsizei, GLboolean, const GLdouble *);
#define glProgramUniformMatrix3x2dv gl_ProgramUniformMatrix3x2dv
extern void (CODEGEN_FUNCPTR *gl_ProgramUniformMatrix3x2fv)(GLuint, GLint, GLsizei, GLboolean, const GLfloat *);
#define glProgramUniformMatrix3x2fv gl_ProgramUniformMatrix3x2fv
extern void (CODEGEN_FUNCPTR *gl_ProgramUniformMatrix3x4dv)(GLuint, GLint, GLsizei, GLboolean, const GLdouble *);
#define glProgramUniformMatrix3x4dv gl_ProgramUniformMatrix3x4dv
extern void (CODEGEN_FUNCPTR *gl_ProgramUniformMatrix3x4fv)(GLuint, GLint, GLsizei, GLboolean, const GLfloat *);
#define glProgramUniformMatrix3x4fv gl_ProgramUniformMatrix3x4fv
extern void (CODEGEN_FUNCPTR *gl_ProgramUniformMatrix4dv)(GLuint, GLint, GLsizei, GLboolean, const GLdouble *);
#define glProgramUniformMatrix4dv gl_ProgramUniformMatrix4dv
extern void (CODEGEN_FUNCPTR *gl_ProgramUniformMatrix4fv)(GLuint, GLint, GLsizei, GLboolean, const GLfloat *);
#define glProgramUniformMatrix4fv gl_ProgramUniformMatrix4fv
extern void (CODEGEN_FUNCPTR *gl_ProgramUniformMatrix4x2dv)(GLuint, GLint, GLsizei, GLboolean, const GLdouble *);
#define glProgramUniformMatrix4x2dv gl_ProgramUniformMatrix4x2dv
extern void (CODEGEN_FUNCPTR *gl_ProgramUniformMatrix4x2fv)(GLuint, GLint, GLsizei, GLboolean, const GLfloat *);
#define glProgramUniformMatrix4x2fv gl_ProgramUniformMatrix4x2fv
extern void (CODEGEN_FUNCPTR *gl_ProgramUniformMatrix4x3dv)(GLuint, GLint, GLsizei, GLboolean, const GLdouble *);
#define glProgramUniformMatrix4x3dv gl_ProgramUniformMatrix4x3dv
extern void (CODEGEN_FUNCPTR *gl_ProgramUniformMatrix4x3fv)(GLuint, GLint, GLsizei, GLboolean, const GLfloat *);
#define glProgramUniformMatrix4x3fv gl_ProgramUniformMatrix4x3fv
extern void (CODEGEN_FUNCPTR *gl_UseProgramStages)(GLuint, GLbitfield, GLuint);
#define glUseProgramStages gl_UseProgramStages
extern void (CODEGEN_FUNCPTR *gl_ValidateProgramPipeline)(GLuint);
#define glValidateProgramPipeline gl_ValidateProgramPipeline
#endif /*GL_ARB_separate_shader_objects*/ 



#ifndef GL_ARB_texture_buffer_range
#define GL_ARB_texture_buffer_range 1
extern void (CODEGEN_FUNCPTR *gl_TexBufferRange)(GLenum, GLenum, GLuint, GLintptr, GLsizeiptr);
#define glTexBufferRange gl_TexBufferRange
#endif /*GL_ARB_texture_buffer_range*/ 

#ifndef GL_ARB_texture_storage
#define GL_ARB_texture_storage 1
extern void (CODEGEN_FUNCPTR *gl_TexStorage1D)(GLenum, GLsizei, GLenum, GLsizei);
#define glTexStorage1D gl_TexStorage1D
extern void (CODEGEN_FUNCPTR *gl_TexStorage2D)(GLenum, GLsizei, GLenum, GLsizei, GLsizei);
#define glTexStorage2D gl_TexStorage2D
extern void (CODEGEN_FUNCPTR *gl_TexStorage3D)(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei);
#define glTexStorage3D gl_TexStorage3D
#endif /*GL_ARB_texture_storage*/ 

#ifndef GL_ARB_texture_view
#define GL_ARB_texture_view 1
extern void (CODEGEN_FUNCPTR *gl_TextureView)(GLuint, GLenum, GLuint, GLenum, GLuint, GLuint, GLuint, GLuint);
#define glTextureView gl_TextureView
#endif /*GL_ARB_texture_view*/ 

#ifndef GL_ARB_vertex_attrib_binding
#define GL_ARB_vertex_attrib_binding 1
extern void (CODEGEN_FUNCPTR *gl_BindVertexBuffer)(GLuint, GLuint, GLintptr, GLsizei);
#define glBindVertexBuffer gl_BindVertexBuffer
extern void (CODEGEN_FUNCPTR *gl_VertexAttribBinding)(GLuint, GLuint);
#define glVertexAttribBinding gl_VertexAttribBinding
extern void (CODEGEN_FUNCPTR *gl_VertexAttribFormat)(GLuint, GLint, GLenum, GLboolean, GLuint);
#define glVertexAttribFormat gl_VertexAttribFormat
extern void (CODEGEN_FUNCPTR *gl_VertexAttribIFormat)(GLuint, GLint, GLenum, GLuint);
#define glVertexAttribIFormat gl_VertexAttribIFormat
extern void (CODEGEN_FUNCPTR *gl_VertexAttribLFormat)(GLuint, GLint, GLenum, GLuint);
#define glVertexAttribLFormat gl_VertexAttribLFormat
extern void (CODEGEN_FUNCPTR *gl_VertexBindingDivisor)(GLuint, GLuint);
#define glVertexBindingDivisor gl_VertexBindingDivisor
#endif /*GL_ARB_vertex_attrib_binding*/ 

#ifndef GL_ARB_viewport_array
#define GL_ARB_viewport_array 1
extern void (CODEGEN_FUNCPTR *gl_DepthRangeArrayv)(GLuint, GLsizei, const GLdouble *);
#define glDepthRangeArrayv gl_DepthRangeArrayv
extern void (CODEGEN_FUNCPTR *gl_DepthRangeIndexed)(GLuint, GLdouble, GLdouble);
#define glDepthRangeIndexed gl_DepthRangeIndexed
extern void (CODEGEN_FUNCPTR *gl_GetDoublei_v)(GLenum, GLuint, GLdouble *);
#define glGetDoublei_v gl_GetDoublei_v
extern void (CODEGEN_FUNCPTR *gl_GetFloati_v)(GLenum, GLuint, GLfloat *);
#define glGetFloati_v gl_GetFloati_v
extern void (CODEGEN_FUNCPTR *gl_ScissorArrayv)(GLuint, GLsizei, const GLint *);
#define glScissorArrayv gl_ScissorArrayv
extern void (CODEGEN_FUNCPTR *gl_ScissorIndexed)(GLuint, GLint, GLint, GLsizei, GLsizei);
#define glScissorIndexed gl_ScissorIndexed
extern void (CODEGEN_FUNCPTR *gl_ScissorIndexedv)(GLuint, const GLint *);
#define glScissorIndexedv gl_ScissorIndexedv
extern void (CODEGEN_FUNCPTR *gl_ViewportArrayv)(GLuint, GLsizei, const GLfloat *);
#define glViewportArrayv gl_ViewportArrayv
extern void (CODEGEN_FUNCPTR *gl_ViewportIndexedf)(GLuint, GLfloat, GLfloat, GLfloat, GLfloat);
#define glViewportIndexedf gl_ViewportIndexedf
extern void (CODEGEN_FUNCPTR *gl_ViewportIndexedfv)(GLuint, const GLfloat *);
#define glViewportIndexedfv gl_ViewportIndexedfv
#endif /*GL_ARB_viewport_array*/ 


#ifndef GL_ARB_clear_buffer_object
#define GL_ARB_clear_buffer_object 1
extern void (CODEGEN_FUNCPTR *gl_ClearBufferData)(GLenum, GLenum, GLenum, GLenum, const void *);
#define glClearBufferData gl_ClearBufferData
extern void (CODEGEN_FUNCPTR *gl_ClearBufferSubData)(GLenum, GLenum, GLintptr, GLsizeiptr, GLenum, GLenum, const void *);
#define glClearBufferSubData gl_ClearBufferSubData
#endif /*GL_ARB_clear_buffer_object*/ 

#ifndef GL_ARB_copy_image
#define GL_ARB_copy_image 1
extern void (CODEGEN_FUNCPTR *gl_CopyImageSubData)(GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei);
#define glCopyImageSubData gl_CopyImageSubData
#endif /*GL_ARB_copy_image*/ 



#ifndef GL_ARB_framebuffer_no_attachments
#define GL_ARB_framebuffer_no_attachments 1
extern void (CODEGEN_FUNCPTR *gl_FramebufferParameteri)(GLenum, GLenum, GLint);
#define glFramebufferParameteri gl_FramebufferParameteri
extern void (CODEGEN_FUNCPTR *gl_GetFramebufferParameteriv)(GLenum, GLenum, GLint *);
#define glGetFramebufferParameteriv gl_GetFramebufferParameteriv
#endif /*GL_ARB_framebuffer_no_attachments*/ 

#ifndef GL_ARB_invalidate_subdata
#define GL_ARB_invalidate_subdata 1
extern void (CODEGEN_FUNCPTR *gl_InvalidateBufferData)(GLuint);
#define glInvalidateBufferData gl_InvalidateBufferData
extern void (CODEGEN_FUNCPTR *gl_InvalidateBufferSubData)(GLuint, GLintptr, GLsizeiptr);
#define glInvalidateBufferSubData gl_InvalidateBufferSubData
extern void (CODEGEN_FUNCPTR *gl_InvalidateFramebuffer)(GLenum, GLsizei, const GLenum *);
#define glInvalidateFramebuffer gl_InvalidateFramebuffer
extern void (CODEGEN_FUNCPTR *gl_InvalidateSubFramebuffer)(GLenum, GLsizei, const GLenum *, GLint, GLint, GLsizei, GLsizei);
#define glInvalidateSubFramebuffer gl_InvalidateSubFramebuffer
extern void (CODEGEN_FUNCPTR *gl_InvalidateTexImage)(GLuint, GLint);
#define glInvalidateTexImage gl_InvalidateTexImage
extern void (CODEGEN_FUNCPTR *gl_InvalidateTexSubImage)(GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei);
#define glInvalidateTexSubImage gl_InvalidateTexSubImage
#endif /*GL_ARB_invalidate_subdata*/ 




#ifndef GL_ARB_texture_storage_multisample
#define GL_ARB_texture_storage_multisample 1
extern void (CODEGEN_FUNCPTR *gl_TexStorage2DMultisample)(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean);
#define glTexStorage2DMultisample gl_TexStorage2DMultisample
extern void (CODEGEN_FUNCPTR *gl_TexStorage3DMultisample)(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean);
#define glTexStorage3DMultisample gl_TexStorage3DMultisample
#endif /*GL_ARB_texture_storage_multisample*/ 

#ifndef GL_KHR_debug
#define GL_KHR_debug 1
extern void (CODEGEN_FUNCPTR *gl_DebugMessageCallback)(GLDEBUGPROC, const void *);
#define glDebugMessageCallback gl_DebugMessageCallback
extern void (CODEGEN_FUNCPTR *gl_DebugMessageControl)(GLenum, GLenum, GLenum, GLsizei, const GLuint *, GLboolean);
#define glDebugMessageControl gl_DebugMessageControl
extern void (CODEGEN_FUNCPTR *gl_DebugMessageInsert)(GLenum, GLenum, GLuint, GLenum, GLsizei, const GLchar *);
#define glDebugMessageInsert gl_DebugMessageInsert
extern GLuint (CODEGEN_FUNCPTR *gl_GetDebugMessageLog)(GLuint, GLsizei, GLenum *, GLenum *, GLuint *, GLenum *, GLsizei *, GLchar *);
#define glGetDebugMessageLog gl_GetDebugMessageLog
extern void (CODEGEN_FUNCPTR *gl_GetObjectLabel)(GLenum, GLuint, GLsizei, GLsizei *, GLchar *);
#define glGetObjectLabel gl_GetObjectLabel
extern void (CODEGEN_FUNCPTR *gl_GetObjectPtrLabel)(const void *, GLsizei, GLsizei *, GLchar *);
#define glGetObjectPtrLabel gl_GetObjectPtrLabel
extern void (CODEGEN_FUNCPTR *gl_GetPointerv)(GLenum, void **);
#define glGetPointerv gl_GetPointerv
extern void (CODEGEN_FUNCPTR *gl_ObjectLabel)(GLenum, GLuint, GLsizei, const GLchar *);
#define glObjectLabel gl_ObjectLabel
extern void (CODEGEN_FUNCPTR *gl_ObjectPtrLabel)(const void *, GLsizei, const GLchar *);
#define glObjectPtrLabel gl_ObjectPtrLabel
extern void (CODEGEN_FUNCPTR *gl_PopDebugGroup)();
#define glPopDebugGroup gl_PopDebugGroup
extern void (CODEGEN_FUNCPTR *gl_PushDebugGroup)(GLenum, GLuint, GLsizei, const GLchar *);
#define glPushDebugGroup gl_PushDebugGroup
#endif /*GL_KHR_debug*/ 

extern void (CODEGEN_FUNCPTR *gl_BlendFunc)(GLenum, GLenum);
#define glBlendFunc gl_BlendFunc
extern void (CODEGEN_FUNCPTR *gl_Clear)(GLbitfield);
#define glClear gl_Clear
extern void (CODEGEN_FUNCPTR *gl_ClearColor)(GLfloat, GLfloat, GLfloat, GLfloat);
#define glClearColor gl_ClearColor
extern void (CODEGEN_FUNCPTR *gl_ClearDepth)(GLdouble);
#define glClearDepth gl_ClearDepth
extern void (CODEGEN_FUNCPTR *gl_ClearStencil)(GLint);
#define glClearStencil gl_ClearStencil
extern void (CODEGEN_FUNCPTR *gl_ColorMask)(GLboolean, GLboolean, GLboolean, GLboolean);
#define glColorMask gl_ColorMask
extern void (CODEGEN_FUNCPTR *gl_CullFace)(GLenum);
#define glCullFace gl_CullFace
extern void (CODEGEN_FUNCPTR *gl_DepthFunc)(GLenum);
#define glDepthFunc gl_DepthFunc
extern void (CODEGEN_FUNCPTR *gl_DepthMask)(GLboolean);
#define glDepthMask gl_DepthMask
extern void (CODEGEN_FUNCPTR *gl_DepthRange)(GLdouble, GLdouble);
#define glDepthRange gl_DepthRange
extern void (CODEGEN_FUNCPTR *gl_Disable)(GLenum);
#define glDisable gl_Disable
extern void (CODEGEN_FUNCPTR *gl_DrawBuffer)(GLenum);
#define glDrawBuffer gl_DrawBuffer
extern void (CODEGEN_FUNCPTR *gl_Enable)(GLenum);
#define glEnable gl_Enable
extern void (CODEGEN_FUNCPTR *gl_Finish)();
#define glFinish gl_Finish
extern void (CODEGEN_FUNCPTR *gl_Flush)();
#define glFlush gl_Flush
extern void (CODEGEN_FUNCPTR *gl_FrontFace)(GLenum);
#define glFrontFace gl_FrontFace
extern void (CODEGEN_FUNCPTR *gl_GetBooleanv)(GLenum, GLboolean *);
#define glGetBooleanv gl_GetBooleanv
extern void (CODEGEN_FUNCPTR *gl_GetDoublev)(GLenum, GLdouble *);
#define glGetDoublev gl_GetDoublev
extern GLenum (CODEGEN_FUNCPTR *gl_GetError)();
#define glGetError gl_GetError
extern void (CODEGEN_FUNCPTR *gl_GetFloatv)(GLenum, GLfloat *);
#define glGetFloatv gl_GetFloatv
extern void (CODEGEN_FUNCPTR *gl_GetIntegerv)(GLenum, GLint *);
#define glGetIntegerv gl_GetIntegerv
extern const GLubyte * (CODEGEN_FUNCPTR *gl_GetString)(GLenum);
#define glGetString gl_GetString
extern void (CODEGEN_FUNCPTR *gl_GetTexImage)(GLenum, GLint, GLenum, GLenum, void *);
#define glGetTexImage gl_GetTexImage
extern void (CODEGEN_FUNCPTR *gl_GetTexLevelParameterfv)(GLenum, GLint, GLenum, GLfloat *);
#define glGetTexLevelParameterfv gl_GetTexLevelParameterfv
extern void (CODEGEN_FUNCPTR *gl_GetTexLevelParameteriv)(GLenum, GLint, GLenum, GLint *);
#define glGetTexLevelParameteriv gl_GetTexLevelParameteriv
extern void (CODEGEN_FUNCPTR *gl_GetTexParameterfv)(GLenum, GLenum, GLfloat *);
#define glGetTexParameterfv gl_GetTexParameterfv
extern void (CODEGEN_FUNCPTR *gl_GetTexParameteriv)(GLenum, GLenum, GLint *);
#define glGetTexParameteriv gl_GetTexParameteriv
extern void (CODEGEN_FUNCPTR *gl_Hint)(GLenum, GLenum);
#define glHint gl_Hint
extern GLboolean (CODEGEN_FUNCPTR *gl_IsEnabled)(GLenum);
#define glIsEnabled gl_IsEnabled
extern void (CODEGEN_FUNCPTR *gl_LineWidth)(GLfloat);
#define glLineWidth gl_LineWidth
extern void (CODEGEN_FUNCPTR *gl_LogicOp)(GLenum);
#define glLogicOp gl_LogicOp
extern void (CODEGEN_FUNCPTR *gl_PixelStoref)(GLenum, GLfloat);
#define glPixelStoref gl_PixelStoref
extern void (CODEGEN_FUNCPTR *gl_PixelStorei)(GLenum, GLint);
#define glPixelStorei gl_PixelStorei
extern void (CODEGEN_FUNCPTR *gl_PointSize)(GLfloat);
#define glPointSize gl_PointSize
extern void (CODEGEN_FUNCPTR *gl_PolygonMode)(GLenum, GLenum);
#define glPolygonMode gl_PolygonMode
extern void (CODEGEN_FUNCPTR *gl_ReadBuffer)(GLenum);
#define glReadBuffer gl_ReadBuffer
extern void (CODEGEN_FUNCPTR *gl_ReadPixels)(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, void *);
#define glReadPixels gl_ReadPixels
extern void (CODEGEN_FUNCPTR *gl_Scissor)(GLint, GLint, GLsizei, GLsizei);
#define glScissor gl_Scissor
extern void (CODEGEN_FUNCPTR *gl_StencilFunc)(GLenum, GLint, GLuint);
#define glStencilFunc gl_StencilFunc
extern void (CODEGEN_FUNCPTR *gl_StencilMask)(GLuint);
#define glStencilMask gl_StencilMask
extern void (CODEGEN_FUNCPTR *gl_StencilOp)(GLenum, GLenum, GLenum);
#define glStencilOp gl_StencilOp
extern void (CODEGEN_FUNCPTR *gl_TexImage1D)(GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, const void *);
#define glTexImage1D gl_TexImage1D
extern void (CODEGEN_FUNCPTR *gl_TexImage2D)(GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, const void *);
#define glTexImage2D gl_TexImage2D
extern void (CODEGEN_FUNCPTR *gl_TexParameterf)(GLenum, GLenum, GLfloat);
#define glTexParameterf gl_TexParameterf
extern void (CODEGEN_FUNCPTR *gl_TexParameterfv)(GLenum, GLenum, const GLfloat *);
#define glTexParameterfv gl_TexParameterfv
extern void (CODEGEN_FUNCPTR *gl_TexParameteri)(GLenum, GLenum, GLint);
#define glTexParameteri gl_TexParameteri
extern void (CODEGEN_FUNCPTR *gl_TexParameteriv)(GLenum, GLenum, const GLint *);
#define glTexParameteriv gl_TexParameteriv
extern void (CODEGEN_FUNCPTR *gl_Viewport)(GLint, GLint, GLsizei, GLsizei);
#define glViewport gl_Viewport

extern void (CODEGEN_FUNCPTR *gl_BindTexture)(GLenum, GLuint);
#define glBindTexture gl_BindTexture
extern void (CODEGEN_FUNCPTR *gl_CopyTexImage1D)(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint);
#define glCopyTexImage1D gl_CopyTexImage1D
extern void (CODEGEN_FUNCPTR *gl_CopyTexImage2D)(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint);
#define glCopyTexImage2D gl_CopyTexImage2D
extern void (CODEGEN_FUNCPTR *gl_CopyTexSubImage1D)(GLenum, GLint, GLint, GLint, GLint, GLsizei);
#define glCopyTexSubImage1D gl_CopyTexSubImage1D
extern void (CODEGEN_FUNCPTR *gl_CopyTexSubImage2D)(GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
#define glCopyTexSubImage2D gl_CopyTexSubImage2D
extern void (CODEGEN_FUNCPTR *gl_DeleteTextures)(GLsizei, const GLuint *);
#define glDeleteTextures gl_DeleteTextures
extern void (CODEGEN_FUNCPTR *gl_DrawArrays)(GLenum, GLint, GLsizei);
#define glDrawArrays gl_DrawArrays
extern void (CODEGEN_FUNCPTR *gl_DrawElements)(GLenum, GLsizei, GLenum, const void *);
#define glDrawElements gl_DrawElements
extern void (CODEGEN_FUNCPTR *gl_GenTextures)(GLsizei, GLuint *);
#define glGenTextures gl_GenTextures
extern GLboolean (CODEGEN_FUNCPTR *gl_IsTexture)(GLuint);
#define glIsTexture gl_IsTexture
extern void (CODEGEN_FUNCPTR *gl_PolygonOffset)(GLfloat, GLfloat);
#define glPolygonOffset gl_PolygonOffset
extern void (CODEGEN_FUNCPTR *gl_TexSubImage1D)(GLenum, GLint, GLint, GLsizei, GLenum, GLenum, const void *);
#define glTexSubImage1D gl_TexSubImage1D
extern void (CODEGEN_FUNCPTR *gl_TexSubImage2D)(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, const void *);
#define glTexSubImage2D gl_TexSubImage2D

extern void (CODEGEN_FUNCPTR *gl_CopyTexSubImage3D)(GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
#define glCopyTexSubImage3D gl_CopyTexSubImage3D
extern void (CODEGEN_FUNCPTR *gl_DrawRangeElements)(GLenum, GLuint, GLuint, GLsizei, GLenum, const void *);
#define glDrawRangeElements gl_DrawRangeElements
extern void (CODEGEN_FUNCPTR *gl_TexImage3D)(GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, const void *);
#define glTexImage3D gl_TexImage3D
extern void (CODEGEN_FUNCPTR *gl_TexSubImage3D)(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, const void *);
#define glTexSubImage3D gl_TexSubImage3D

extern void (CODEGEN_FUNCPTR *gl_ActiveTexture)(GLenum);
#define glActiveTexture gl_ActiveTexture
extern void (CODEGEN_FUNCPTR *gl_CompressedTexImage1D)(GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, const void *);
#define glCompressedTexImage1D gl_CompressedTexImage1D
extern void (CODEGEN_FUNCPTR *gl_CompressedTexImage2D)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, const void *);
#define glCompressedTexImage2D gl_CompressedTexImage2D
extern void (CODEGEN_FUNCPTR *gl_CompressedTexImage3D)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, const void *);
#define glCompressedTexImage3D gl_CompressedTexImage3D
extern void (CODEGEN_FUNCPTR *gl_CompressedTexSubImage1D)(GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, const void *);
#define glCompressedTexSubImage1D gl_CompressedTexSubImage1D
extern void (CODEGEN_FUNCPTR *gl_CompressedTexSubImage2D)(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, const void *);
#define glCompressedTexSubImage2D gl_CompressedTexSubImage2D
extern void (CODEGEN_FUNCPTR *gl_CompressedTexSubImage3D)(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, const void *);
#define glCompressedTexSubImage3D gl_CompressedTexSubImage3D
extern void (CODEGEN_FUNCPTR *gl_GetCompressedTexImage)(GLenum, GLint, void *);
#define glGetCompressedTexImage gl_GetCompressedTexImage
extern void (CODEGEN_FUNCPTR *gl_SampleCoverage)(GLfloat, GLboolean);
#define glSampleCoverage gl_SampleCoverage

extern void (CODEGEN_FUNCPTR *gl_BlendFuncSeparate)(GLenum, GLenum, GLenum, GLenum);
#define glBlendFuncSeparate gl_BlendFuncSeparate
extern void (CODEGEN_FUNCPTR *gl_MultiDrawArrays)(GLenum, const GLint *, const GLsizei *, GLsizei);
#define glMultiDrawArrays gl_MultiDrawArrays
extern void (CODEGEN_FUNCPTR *gl_MultiDrawElements)(GLenum, const GLsizei *, GLenum, const void *const*, GLsizei);
#define glMultiDrawElements gl_MultiDrawElements
extern void (CODEGEN_FUNCPTR *gl_PointParameterf)(GLenum, GLfloat);
#define glPointParameterf gl_PointParameterf
extern void (CODEGEN_FUNCPTR *gl_PointParameterfv)(GLenum, const GLfloat *);
#define glPointParameterfv gl_PointParameterfv
extern void (CODEGEN_FUNCPTR *gl_PointParameteri)(GLenum, GLint);
#define glPointParameteri gl_PointParameteri
extern void (CODEGEN_FUNCPTR *gl_PointParameteriv)(GLenum, const GLint *);
#define glPointParameteriv gl_PointParameteriv

extern void (CODEGEN_FUNCPTR *gl_BeginQuery)(GLenum, GLuint);
#define glBeginQuery gl_BeginQuery
extern void (CODEGEN_FUNCPTR *gl_BindBuffer)(GLenum, GLuint);
#define glBindBuffer gl_BindBuffer
extern void (CODEGEN_FUNCPTR *gl_BufferData)(GLenum, GLsizeiptr, const void *, GLenum);
#define glBufferData gl_BufferData
extern void (CODEGEN_FUNCPTR *gl_BufferSubData)(GLenum, GLintptr, GLsizeiptr, const void *);
#define glBufferSubData gl_BufferSubData
extern void (CODEGEN_FUNCPTR *gl_DeleteBuffers)(GLsizei, const GLuint *);
#define glDeleteBuffers gl_DeleteBuffers
extern void (CODEGEN_FUNCPTR *gl_DeleteQueries)(GLsizei, const GLuint *);
#define glDeleteQueries gl_DeleteQueries
extern void (CODEGEN_FUNCPTR *gl_EndQuery)(GLenum);
#define glEndQuery gl_EndQuery
extern void (CODEGEN_FUNCPTR *gl_GenBuffers)(GLsizei, GLuint *);
#define glGenBuffers gl_GenBuffers
extern void (CODEGEN_FUNCPTR *gl_GenQueries)(GLsizei, GLuint *);
#define glGenQueries gl_GenQueries
extern void (CODEGEN_FUNCPTR *gl_GetBufferParameteriv)(GLenum, GLenum, GLint *);
#define glGetBufferParameteriv gl_GetBufferParameteriv
extern void (CODEGEN_FUNCPTR *gl_GetBufferPointerv)(GLenum, GLenum, void **);
#define glGetBufferPointerv gl_GetBufferPointerv
extern void (CODEGEN_FUNCPTR *gl_GetBufferSubData)(GLenum, GLintptr, GLsizeiptr, void *);
#define glGetBufferSubData gl_GetBufferSubData
extern void (CODEGEN_FUNCPTR *gl_GetQueryObjectiv)(GLuint, GLenum, GLint *);
#define glGetQueryObjectiv gl_GetQueryObjectiv
extern void (CODEGEN_FUNCPTR *gl_GetQueryObjectuiv)(GLuint, GLenum, GLuint *);
#define glGetQueryObjectuiv gl_GetQueryObjectuiv
extern void (CODEGEN_FUNCPTR *gl_GetQueryiv)(GLenum, GLenum, GLint *);
#define glGetQueryiv gl_GetQueryiv
extern GLboolean (CODEGEN_FUNCPTR *gl_IsBuffer)(GLuint);
#define glIsBuffer gl_IsBuffer
extern GLboolean (CODEGEN_FUNCPTR *gl_IsQuery)(GLuint);
#define glIsQuery gl_IsQuery
extern void * (CODEGEN_FUNCPTR *gl_MapBuffer)(GLenum, GLenum);
#define glMapBuffer gl_MapBuffer
extern GLboolean (CODEGEN_FUNCPTR *gl_UnmapBuffer)(GLenum);
#define glUnmapBuffer gl_UnmapBuffer

extern void (CODEGEN_FUNCPTR *gl_AttachShader)(GLuint, GLuint);
#define glAttachShader gl_AttachShader
extern void (CODEGEN_FUNCPTR *gl_BindAttribLocation)(GLuint, GLuint, const GLchar *);
#define glBindAttribLocation gl_BindAttribLocation
extern void (CODEGEN_FUNCPTR *gl_BlendEquationSeparate)(GLenum, GLenum);
#define glBlendEquationSeparate gl_BlendEquationSeparate
extern void (CODEGEN_FUNCPTR *gl_CompileShader)(GLuint);
#define glCompileShader gl_CompileShader
extern GLuint (CODEGEN_FUNCPTR *gl_CreateProgram)();
#define glCreateProgram gl_CreateProgram
extern GLuint (CODEGEN_FUNCPTR *gl_CreateShader)(GLenum);
#define glCreateShader gl_CreateShader
extern void (CODEGEN_FUNCPTR *gl_DeleteProgram)(GLuint);
#define glDeleteProgram gl_DeleteProgram
extern void (CODEGEN_FUNCPTR *gl_DeleteShader)(GLuint);
#define glDeleteShader gl_DeleteShader
extern void (CODEGEN_FUNCPTR *gl_DetachShader)(GLuint, GLuint);
#define glDetachShader gl_DetachShader
extern void (CODEGEN_FUNCPTR *gl_DisableVertexAttribArray)(GLuint);
#define glDisableVertexAttribArray gl_DisableVertexAttribArray
extern void (CODEGEN_FUNCPTR *gl_DrawBuffers)(GLsizei, const GLenum *);
#define glDrawBuffers gl_DrawBuffers
extern void (CODEGEN_FUNCPTR *gl_EnableVertexAttribArray)(GLuint);
#define glEnableVertexAttribArray gl_EnableVertexAttribArray
extern void (CODEGEN_FUNCPTR *gl_GetActiveAttrib)(GLuint, GLuint, GLsizei, GLsizei *, GLint *, GLenum *, GLchar *);
#define glGetActiveAttrib gl_GetActiveAttrib
extern void (CODEGEN_FUNCPTR *gl_GetActiveUniform)(GLuint, GLuint, GLsizei, GLsizei *, GLint *, GLenum *, GLchar *);
#define glGetActiveUniform gl_GetActiveUniform
extern void (CODEGEN_FUNCPTR *gl_GetAttachedShaders)(GLuint, GLsizei, GLsizei *, GLuint *);
#define glGetAttachedShaders gl_GetAttachedShaders
extern GLint (CODEGEN_FUNCPTR *gl_GetAttribLocation)(GLuint, const GLchar *);
#define glGetAttribLocation gl_GetAttribLocation
extern void (CODEGEN_FUNCPTR *gl_GetProgramInfoLog)(GLuint, GLsizei, GLsizei *, GLchar *);
#define glGetProgramInfoLog gl_GetProgramInfoLog
extern void (CODEGEN_FUNCPTR *gl_GetProgramiv)(GLuint, GLenum, GLint *);
#define glGetProgramiv gl_GetProgramiv
extern void (CODEGEN_FUNCPTR *gl_GetShaderInfoLog)(GLuint, GLsizei, GLsizei *, GLchar *);
#define glGetShaderInfoLog gl_GetShaderInfoLog
extern void (CODEGEN_FUNCPTR *gl_GetShaderSource)(GLuint, GLsizei, GLsizei *, GLchar *);
#define glGetShaderSource gl_GetShaderSource
extern void (CODEGEN_FUNCPTR *gl_GetShaderiv)(GLuint, GLenum, GLint *);
#define glGetShaderiv gl_GetShaderiv
extern GLint (CODEGEN_FUNCPTR *gl_GetUniformLocation)(GLuint, const GLchar *);
#define glGetUniformLocation gl_GetUniformLocation
extern void (CODEGEN_FUNCPTR *gl_GetUniformfv)(GLuint, GLint, GLfloat *);
#define glGetUniformfv gl_GetUniformfv
extern void (CODEGEN_FUNCPTR *gl_GetUniformiv)(GLuint, GLint, GLint *);
#define glGetUniformiv gl_GetUniformiv
extern void (CODEGEN_FUNCPTR *gl_GetVertexAttribPointerv)(GLuint, GLenum, void **);
#define glGetVertexAttribPointerv gl_GetVertexAttribPointerv
extern void (CODEGEN_FUNCPTR *gl_GetVertexAttribdv)(GLuint, GLenum, GLdouble *);
#define glGetVertexAttribdv gl_GetVertexAttribdv
extern void (CODEGEN_FUNCPTR *gl_GetVertexAttribfv)(GLuint, GLenum, GLfloat *);
#define glGetVertexAttribfv gl_GetVertexAttribfv
extern void (CODEGEN_FUNCPTR *gl_GetVertexAttribiv)(GLuint, GLenum, GLint *);
#define glGetVertexAttribiv gl_GetVertexAttribiv
extern GLboolean (CODEGEN_FUNCPTR *gl_IsProgram)(GLuint);
#define glIsProgram gl_IsProgram
extern GLboolean (CODEGEN_FUNCPTR *gl_IsShader)(GLuint);
#define glIsShader gl_IsShader
extern void (CODEGEN_FUNCPTR *gl_LinkProgram)(GLuint);
#define glLinkProgram gl_LinkProgram
extern void (CODEGEN_FUNCPTR *gl_ShaderSource)(GLuint, GLsizei, const GLchar *const*, const GLint *);
#define glShaderSource gl_ShaderSource
extern void (CODEGEN_FUNCPTR *gl_StencilFuncSeparate)(GLenum, GLenum, GLint, GLuint);
#define glStencilFuncSeparate gl_StencilFuncSeparate
extern void (CODEGEN_FUNCPTR *gl_StencilMaskSeparate)(GLenum, GLuint);
#define glStencilMaskSeparate gl_StencilMaskSeparate
extern void (CODEGEN_FUNCPTR *gl_StencilOpSeparate)(GLenum, GLenum, GLenum, GLenum);
#define glStencilOpSeparate gl_StencilOpSeparate
extern void (CODEGEN_FUNCPTR *gl_Uniform1f)(GLint, GLfloat);
#define glUniform1f gl_Uniform1f
extern void (CODEGEN_FUNCPTR *gl_Uniform1fv)(GLint, GLsizei, const GLfloat *);
#define glUniform1fv gl_Uniform1fv
extern void (CODEGEN_FUNCPTR *gl_Uniform1i)(GLint, GLint);
#define glUniform1i gl_Uniform1i
extern void (CODEGEN_FUNCPTR *gl_Uniform1iv)(GLint, GLsizei, const GLint *);
#define glUniform1iv gl_Uniform1iv
extern void (CODEGEN_FUNCPTR *gl_Uniform2f)(GLint, GLfloat, GLfloat);
#define glUniform2f gl_Uniform2f
extern void (CODEGEN_FUNCPTR *gl_Uniform2fv)(GLint, GLsizei, const GLfloat *);
#define glUniform2fv gl_Uniform2fv
extern void (CODEGEN_FUNCPTR *gl_Uniform2i)(GLint, GLint, GLint);
#define glUniform2i gl_Uniform2i
extern void (CODEGEN_FUNCPTR *gl_Uniform2iv)(GLint, GLsizei, const GLint *);
#define glUniform2iv gl_Uniform2iv
extern void (CODEGEN_FUNCPTR *gl_Uniform3f)(GLint, GLfloat, GLfloat, GLfloat);
#define glUniform3f gl_Uniform3f
extern void (CODEGEN_FUNCPTR *gl_Uniform3fv)(GLint, GLsizei, const GLfloat *);
#define glUniform3fv gl_Uniform3fv
extern void (CODEGEN_FUNCPTR *gl_Uniform3i)(GLint, GLint, GLint, GLint);
#define glUniform3i gl_Uniform3i
extern void (CODEGEN_FUNCPTR *gl_Uniform3iv)(GLint, GLsizei, const GLint *);
#define glUniform3iv gl_Uniform3iv
extern void (CODEGEN_FUNCPTR *gl_Uniform4f)(GLint, GLfloat, GLfloat, GLfloat, GLfloat);
#define glUniform4f gl_Uniform4f
extern void (CODEGEN_FUNCPTR *gl_Uniform4fv)(GLint, GLsizei, const GLfloat *);
#define glUniform4fv gl_Uniform4fv
extern void (CODEGEN_FUNCPTR *gl_Uniform4i)(GLint, GLint, GLint, GLint, GLint);
#define glUniform4i gl_Uniform4i
extern void (CODEGEN_FUNCPTR *gl_Uniform4iv)(GLint, GLsizei, const GLint *);
#define glUniform4iv gl_Uniform4iv
extern void (CODEGEN_FUNCPTR *gl_UniformMatrix2fv)(GLint, GLsizei, GLboolean, const GLfloat *);
#define glUniformMatrix2fv gl_UniformMatrix2fv
extern void (CODEGEN_FUNCPTR *gl_UniformMatrix3fv)(GLint, GLsizei, GLboolean, const GLfloat *);
#define glUniformMatrix3fv gl_UniformMatrix3fv
extern void (CODEGEN_FUNCPTR *gl_UniformMatrix4fv)(GLint, GLsizei, GLboolean, const GLfloat *);
#define glUniformMatrix4fv gl_UniformMatrix4fv
extern void (CODEGEN_FUNCPTR *gl_UseProgram)(GLuint);
#define glUseProgram gl_UseProgram
extern void (CODEGEN_FUNCPTR *gl_ValidateProgram)(GLuint);
#define glValidateProgram gl_ValidateProgram
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib1d)(GLuint, GLdouble);
#define glVertexAttrib1d gl_VertexAttrib1d
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib1dv)(GLuint, const GLdouble *);
#define glVertexAttrib1dv gl_VertexAttrib1dv
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib1f)(GLuint, GLfloat);
#define glVertexAttrib1f gl_VertexAttrib1f
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib1fv)(GLuint, const GLfloat *);
#define glVertexAttrib1fv gl_VertexAttrib1fv
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib1s)(GLuint, GLshort);
#define glVertexAttrib1s gl_VertexAttrib1s
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib1sv)(GLuint, const GLshort *);
#define glVertexAttrib1sv gl_VertexAttrib1sv
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib2d)(GLuint, GLdouble, GLdouble);
#define glVertexAttrib2d gl_VertexAttrib2d
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib2dv)(GLuint, const GLdouble *);
#define glVertexAttrib2dv gl_VertexAttrib2dv
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib2f)(GLuint, GLfloat, GLfloat);
#define glVertexAttrib2f gl_VertexAttrib2f
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib2fv)(GLuint, const GLfloat *);
#define glVertexAttrib2fv gl_VertexAttrib2fv
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib2s)(GLuint, GLshort, GLshort);
#define glVertexAttrib2s gl_VertexAttrib2s
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib2sv)(GLuint, const GLshort *);
#define glVertexAttrib2sv gl_VertexAttrib2sv
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib3d)(GLuint, GLdouble, GLdouble, GLdouble);
#define glVertexAttrib3d gl_VertexAttrib3d
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib3dv)(GLuint, const GLdouble *);
#define glVertexAttrib3dv gl_VertexAttrib3dv
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib3f)(GLuint, GLfloat, GLfloat, GLfloat);
#define glVertexAttrib3f gl_VertexAttrib3f
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib3fv)(GLuint, const GLfloat *);
#define glVertexAttrib3fv gl_VertexAttrib3fv
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib3s)(GLuint, GLshort, GLshort, GLshort);
#define glVertexAttrib3s gl_VertexAttrib3s
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib3sv)(GLuint, const GLshort *);
#define glVertexAttrib3sv gl_VertexAttrib3sv
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib4Nbv)(GLuint, const GLbyte *);
#define glVertexAttrib4Nbv gl_VertexAttrib4Nbv
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib4Niv)(GLuint, const GLint *);
#define glVertexAttrib4Niv gl_VertexAttrib4Niv
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib4Nsv)(GLuint, const GLshort *);
#define glVertexAttrib4Nsv gl_VertexAttrib4Nsv
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib4Nub)(GLuint, GLubyte, GLubyte, GLubyte, GLubyte);
#define glVertexAttrib4Nub gl_VertexAttrib4Nub
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib4Nubv)(GLuint, const GLubyte *);
#define glVertexAttrib4Nubv gl_VertexAttrib4Nubv
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib4Nuiv)(GLuint, const GLuint *);
#define glVertexAttrib4Nuiv gl_VertexAttrib4Nuiv
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib4Nusv)(GLuint, const GLushort *);
#define glVertexAttrib4Nusv gl_VertexAttrib4Nusv
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib4bv)(GLuint, const GLbyte *);
#define glVertexAttrib4bv gl_VertexAttrib4bv
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib4d)(GLuint, GLdouble, GLdouble, GLdouble, GLdouble);
#define glVertexAttrib4d gl_VertexAttrib4d
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib4dv)(GLuint, const GLdouble *);
#define glVertexAttrib4dv gl_VertexAttrib4dv
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib4f)(GLuint, GLfloat, GLfloat, GLfloat, GLfloat);
#define glVertexAttrib4f gl_VertexAttrib4f
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib4fv)(GLuint, const GLfloat *);
#define glVertexAttrib4fv gl_VertexAttrib4fv
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib4iv)(GLuint, const GLint *);
#define glVertexAttrib4iv gl_VertexAttrib4iv
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib4s)(GLuint, GLshort, GLshort, GLshort, GLshort);
#define glVertexAttrib4s gl_VertexAttrib4s
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib4sv)(GLuint, const GLshort *);
#define glVertexAttrib4sv gl_VertexAttrib4sv
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib4ubv)(GLuint, const GLubyte *);
#define glVertexAttrib4ubv gl_VertexAttrib4ubv
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib4uiv)(GLuint, const GLuint *);
#define glVertexAttrib4uiv gl_VertexAttrib4uiv
extern void (CODEGEN_FUNCPTR *gl_VertexAttrib4usv)(GLuint, const GLushort *);
#define glVertexAttrib4usv gl_VertexAttrib4usv
extern void (CODEGEN_FUNCPTR *gl_VertexAttribPointer)(GLuint, GLint, GLenum, GLboolean, GLsizei, const void *);
#define glVertexAttribPointer gl_VertexAttribPointer

extern void (CODEGEN_FUNCPTR *gl_UniformMatrix2x3fv)(GLint, GLsizei, GLboolean, const GLfloat *);
#define glUniformMatrix2x3fv gl_UniformMatrix2x3fv
extern void (CODEGEN_FUNCPTR *gl_UniformMatrix2x4fv)(GLint, GLsizei, GLboolean, const GLfloat *);
#define glUniformMatrix2x4fv gl_UniformMatrix2x4fv
extern void (CODEGEN_FUNCPTR *gl_UniformMatrix3x2fv)(GLint, GLsizei, GLboolean, const GLfloat *);
#define glUniformMatrix3x2fv gl_UniformMatrix3x2fv
extern void (CODEGEN_FUNCPTR *gl_UniformMatrix3x4fv)(GLint, GLsizei, GLboolean, const GLfloat *);
#define glUniformMatrix3x4fv gl_UniformMatrix3x4fv
extern void (CODEGEN_FUNCPTR *gl_UniformMatrix4x2fv)(GLint, GLsizei, GLboolean, const GLfloat *);
#define glUniformMatrix4x2fv gl_UniformMatrix4x2fv
extern void (CODEGEN_FUNCPTR *gl_UniformMatrix4x3fv)(GLint, GLsizei, GLboolean, const GLfloat *);
#define glUniformMatrix4x3fv gl_UniformMatrix4x3fv

extern void (CODEGEN_FUNCPTR *gl_BeginConditionalRender)(GLuint, GLenum);
#define glBeginConditionalRender gl_BeginConditionalRender
extern void (CODEGEN_FUNCPTR *gl_BeginTransformFeedback)(GLenum);
#define glBeginTransformFeedback gl_BeginTransformFeedback
extern void (CODEGEN_FUNCPTR *gl_BindBufferBase)(GLenum, GLuint, GLuint);
#define glBindBufferBase gl_BindBufferBase
extern void (CODEGEN_FUNCPTR *gl_BindBufferRange)(GLenum, GLuint, GLuint, GLintptr, GLsizeiptr);
#define glBindBufferRange gl_BindBufferRange
extern void (CODEGEN_FUNCPTR *gl_BindFragDataLocation)(GLuint, GLuint, const GLchar *);
#define glBindFragDataLocation gl_BindFragDataLocation
extern void (CODEGEN_FUNCPTR *gl_BindFramebuffer)(GLenum, GLuint);
#define glBindFramebuffer gl_BindFramebuffer
extern void (CODEGEN_FUNCPTR *gl_BindRenderbuffer)(GLenum, GLuint);
#define glBindRenderbuffer gl_BindRenderbuffer
extern void (CODEGEN_FUNCPTR *gl_BindVertexArray)(GLuint);
#define glBindVertexArray gl_BindVertexArray
extern void (CODEGEN_FUNCPTR *gl_BlitFramebuffer)(GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum);
#define glBlitFramebuffer gl_BlitFramebuffer
extern GLenum (CODEGEN_FUNCPTR *gl_CheckFramebufferStatus)(GLenum);
#define glCheckFramebufferStatus gl_CheckFramebufferStatus
extern void (CODEGEN_FUNCPTR *gl_ClampColor)(GLenum, GLenum);
#define glClampColor gl_ClampColor
extern void (CODEGEN_FUNCPTR *gl_ClearBufferfi)(GLenum, GLint, GLfloat, GLint);
#define glClearBufferfi gl_ClearBufferfi
extern void (CODEGEN_FUNCPTR *gl_ClearBufferfv)(GLenum, GLint, const GLfloat *);
#define glClearBufferfv gl_ClearBufferfv
extern void (CODEGEN_FUNCPTR *gl_ClearBufferiv)(GLenum, GLint, const GLint *);
#define glClearBufferiv gl_ClearBufferiv
extern void (CODEGEN_FUNCPTR *gl_ClearBufferuiv)(GLenum, GLint, const GLuint *);
#define glClearBufferuiv gl_ClearBufferuiv
extern void (CODEGEN_FUNCPTR *gl_ColorMaski)(GLuint, GLboolean, GLboolean, GLboolean, GLboolean);
#define glColorMaski gl_ColorMaski
extern void (CODEGEN_FUNCPTR *gl_DeleteFramebuffers)(GLsizei, const GLuint *);
#define glDeleteFramebuffers gl_DeleteFramebuffers
extern void (CODEGEN_FUNCPTR *gl_DeleteRenderbuffers)(GLsizei, const GLuint *);
#define glDeleteRenderbuffers gl_DeleteRenderbuffers
extern void (CODEGEN_FUNCPTR *gl_DeleteVertexArrays)(GLsizei, const GLuint *);
#define glDeleteVertexArrays gl_DeleteVertexArrays
extern void (CODEGEN_FUNCPTR *gl_Disablei)(GLenum, GLuint);
#define glDisablei gl_Disablei
extern void (CODEGEN_FUNCPTR *gl_Enablei)(GLenum, GLuint);
#define glEnablei gl_Enablei
extern void (CODEGEN_FUNCPTR *gl_EndConditionalRender)();
#define glEndConditionalRender gl_EndConditionalRender
extern void (CODEGEN_FUNCPTR *gl_EndTransformFeedback)();
#define glEndTransformFeedback gl_EndTransformFeedback
extern void (CODEGEN_FUNCPTR *gl_FlushMappedBufferRange)(GLenum, GLintptr, GLsizeiptr);
#define glFlushMappedBufferRange gl_FlushMappedBufferRange
extern void (CODEGEN_FUNCPTR *gl_FramebufferRenderbuffer)(GLenum, GLenum, GLenum, GLuint);
#define glFramebufferRenderbuffer gl_FramebufferRenderbuffer
extern void (CODEGEN_FUNCPTR *gl_FramebufferTexture1D)(GLenum, GLenum, GLenum, GLuint, GLint);
#define glFramebufferTexture1D gl_FramebufferTexture1D
extern void (CODEGEN_FUNCPTR *gl_FramebufferTexture2D)(GLenum, GLenum, GLenum, GLuint, GLint);
#define glFramebufferTexture2D gl_FramebufferTexture2D
extern void (CODEGEN_FUNCPTR *gl_FramebufferTexture3D)(GLenum, GLenum, GLenum, GLuint, GLint, GLint);
#define glFramebufferTexture3D gl_FramebufferTexture3D
extern void (CODEGEN_FUNCPTR *gl_FramebufferTextureLayer)(GLenum, GLenum, GLuint, GLint, GLint);
#define glFramebufferTextureLayer gl_FramebufferTextureLayer
extern void (CODEGEN_FUNCPTR *gl_GenFramebuffers)(GLsizei, GLuint *);
#define glGenFramebuffers gl_GenFramebuffers
extern void (CODEGEN_FUNCPTR *gl_GenRenderbuffers)(GLsizei, GLuint *);
#define glGenRenderbuffers gl_GenRenderbuffers
extern void (CODEGEN_FUNCPTR *gl_GenVertexArrays)(GLsizei, GLuint *);
#define glGenVertexArrays gl_GenVertexArrays
extern void (CODEGEN_FUNCPTR *gl_GenerateMipmap)(GLenum);
#define glGenerateMipmap gl_GenerateMipmap
extern void (CODEGEN_FUNCPTR *gl_GetBooleani_v)(GLenum, GLuint, GLboolean *);
#define glGetBooleani_v gl_GetBooleani_v
extern GLint (CODEGEN_FUNCPTR *gl_GetFragDataLocation)(GLuint, const GLchar *);
#define glGetFragDataLocation gl_GetFragDataLocation
extern void (CODEGEN_FUNCPTR *gl_GetFramebufferAttachmentParameteriv)(GLenum, GLenum, GLenum, GLint *);
#define glGetFramebufferAttachmentParameteriv gl_GetFramebufferAttachmentParameteriv
extern void (CODEGEN_FUNCPTR *gl_GetIntegeri_v)(GLenum, GLuint, GLint *);
#define glGetIntegeri_v gl_GetIntegeri_v
extern void (CODEGEN_FUNCPTR *gl_GetRenderbufferParameteriv)(GLenum, GLenum, GLint *);
#define glGetRenderbufferParameteriv gl_GetRenderbufferParameteriv
extern const GLubyte * (CODEGEN_FUNCPTR *gl_GetStringi)(GLenum, GLuint);
#define glGetStringi gl_GetStringi
extern void (CODEGEN_FUNCPTR *gl_GetTexParameterIiv)(GLenum, GLenum, GLint *);
#define glGetTexParameterIiv gl_GetTexParameterIiv
extern void (CODEGEN_FUNCPTR *gl_GetTexParameterIuiv)(GLenum, GLenum, GLuint *);
#define glGetTexParameterIuiv gl_GetTexParameterIuiv
extern void (CODEGEN_FUNCPTR *gl_GetTransformFeedbackVarying)(GLuint, GLuint, GLsizei, GLsizei *, GLsizei *, GLenum *, GLchar *);
#define glGetTransformFeedbackVarying gl_GetTransformFeedbackVarying
extern void (CODEGEN_FUNCPTR *gl_GetUniformuiv)(GLuint, GLint, GLuint *);
#define glGetUniformuiv gl_GetUniformuiv
extern void (CODEGEN_FUNCPTR *gl_GetVertexAttribIiv)(GLuint, GLenum, GLint *);
#define glGetVertexAttribIiv gl_GetVertexAttribIiv
extern void (CODEGEN_FUNCPTR *gl_GetVertexAttribIuiv)(GLuint, GLenum, GLuint *);
#define glGetVertexAttribIuiv gl_GetVertexAttribIuiv
extern GLboolean (CODEGEN_FUNCPTR *gl_IsEnabledi)(GLenum, GLuint);
#define glIsEnabledi gl_IsEnabledi
extern GLboolean (CODEGEN_FUNCPTR *gl_IsFramebuffer)(GLuint);
#define glIsFramebuffer gl_IsFramebuffer
extern GLboolean (CODEGEN_FUNCPTR *gl_IsRenderbuffer)(GLuint);
#define glIsRenderbuffer gl_IsRenderbuffer
extern GLboolean (CODEGEN_FUNCPTR *gl_IsVertexArray)(GLuint);
#define glIsVertexArray gl_IsVertexArray
extern void * (CODEGEN_FUNCPTR *gl_MapBufferRange)(GLenum, GLintptr, GLsizeiptr, GLbitfield);
#define glMapBufferRange gl_MapBufferRange
extern void (CODEGEN_FUNCPTR *gl_RenderbufferStorage)(GLenum, GLenum, GLsizei, GLsizei);
#define glRenderbufferStorage gl_RenderbufferStorage
extern void (CODEGEN_FUNCPTR *gl_RenderbufferStorageMultisample)(GLenum, GLsizei, GLenum, GLsizei, GLsizei);
#define glRenderbufferStorageMultisample gl_RenderbufferStorageMultisample
extern void (CODEGEN_FUNCPTR *gl_TexParameterIiv)(GLenum, GLenum, const GLint *);
#define glTexParameterIiv gl_TexParameterIiv
extern void (CODEGEN_FUNCPTR *gl_TexParameterIuiv)(GLenum, GLenum, const GLuint *);
#define glTexParameterIuiv gl_TexParameterIuiv
extern void (CODEGEN_FUNCPTR *gl_TransformFeedbackVaryings)(GLuint, GLsizei, const GLchar *const*, GLenum);
#define glTransformFeedbackVaryings gl_TransformFeedbackVaryings
extern void (CODEGEN_FUNCPTR *gl_Uniform1ui)(GLint, GLuint);
#define glUniform1ui gl_Uniform1ui
extern void (CODEGEN_FUNCPTR *gl_Uniform1uiv)(GLint, GLsizei, const GLuint *);
#define glUniform1uiv gl_Uniform1uiv
extern void (CODEGEN_FUNCPTR *gl_Uniform2ui)(GLint, GLuint, GLuint);
#define glUniform2ui gl_Uniform2ui
extern void (CODEGEN_FUNCPTR *gl_Uniform2uiv)(GLint, GLsizei, const GLuint *);
#define glUniform2uiv gl_Uniform2uiv
extern void (CODEGEN_FUNCPTR *gl_Uniform3ui)(GLint, GLuint, GLuint, GLuint);
#define glUniform3ui gl_Uniform3ui
extern void (CODEGEN_FUNCPTR *gl_Uniform3uiv)(GLint, GLsizei, const GLuint *);
#define glUniform3uiv gl_Uniform3uiv
extern void (CODEGEN_FUNCPTR *gl_Uniform4ui)(GLint, GLuint, GLuint, GLuint, GLuint);
#define glUniform4ui gl_Uniform4ui
extern void (CODEGEN_FUNCPTR *gl_Uniform4uiv)(GLint, GLsizei, const GLuint *);
#define glUniform4uiv gl_Uniform4uiv
extern void (CODEGEN_FUNCPTR *gl_VertexAttribI1i)(GLuint, GLint);
#define glVertexAttribI1i gl_VertexAttribI1i
extern void (CODEGEN_FUNCPTR *gl_VertexAttribI1iv)(GLuint, const GLint *);
#define glVertexAttribI1iv gl_VertexAttribI1iv
extern void (CODEGEN_FUNCPTR *gl_VertexAttribI1ui)(GLuint, GLuint);
#define glVertexAttribI1ui gl_VertexAttribI1ui
extern void (CODEGEN_FUNCPTR *gl_VertexAttribI1uiv)(GLuint, const GLuint *);
#define glVertexAttribI1uiv gl_VertexAttribI1uiv
extern void (CODEGEN_FUNCPTR *gl_VertexAttribI2i)(GLuint, GLint, GLint);
#define glVertexAttribI2i gl_VertexAttribI2i
extern void (CODEGEN_FUNCPTR *gl_VertexAttribI2iv)(GLuint, const GLint *);
#define glVertexAttribI2iv gl_VertexAttribI2iv
extern void (CODEGEN_FUNCPTR *gl_VertexAttribI2ui)(GLuint, GLuint, GLuint);
#define glVertexAttribI2ui gl_VertexAttribI2ui
extern void (CODEGEN_FUNCPTR *gl_VertexAttribI2uiv)(GLuint, const GLuint *);
#define glVertexAttribI2uiv gl_VertexAttribI2uiv
extern void (CODEGEN_FUNCPTR *gl_VertexAttribI3i)(GLuint, GLint, GLint, GLint);
#define glVertexAttribI3i gl_VertexAttribI3i
extern void (CODEGEN_FUNCPTR *gl_VertexAttribI3iv)(GLuint, const GLint *);
#define glVertexAttribI3iv gl_VertexAttribI3iv
extern void (CODEGEN_FUNCPTR *gl_VertexAttribI3ui)(GLuint, GLuint, GLuint, GLuint);
#define glVertexAttribI3ui gl_VertexAttribI3ui
extern void (CODEGEN_FUNCPTR *gl_VertexAttribI3uiv)(GLuint, const GLuint *);
#define glVertexAttribI3uiv gl_VertexAttribI3uiv
extern void (CODEGEN_FUNCPTR *gl_VertexAttribI4bv)(GLuint, const GLbyte *);
#define glVertexAttribI4bv gl_VertexAttribI4bv
extern void (CODEGEN_FUNCPTR *gl_VertexAttribI4i)(GLuint, GLint, GLint, GLint, GLint);
#define glVertexAttribI4i gl_VertexAttribI4i
extern void (CODEGEN_FUNCPTR *gl_VertexAttribI4iv)(GLuint, const GLint *);
#define glVertexAttribI4iv gl_VertexAttribI4iv
extern void (CODEGEN_FUNCPTR *gl_VertexAttribI4sv)(GLuint, const GLshort *);
#define glVertexAttribI4sv gl_VertexAttribI4sv
extern void (CODEGEN_FUNCPTR *gl_VertexAttribI4ubv)(GLuint, const GLubyte *);
#define glVertexAttribI4ubv gl_VertexAttribI4ubv
extern void (CODEGEN_FUNCPTR *gl_VertexAttribI4ui)(GLuint, GLuint, GLuint, GLuint, GLuint);
#define glVertexAttribI4ui gl_VertexAttribI4ui
extern void (CODEGEN_FUNCPTR *gl_VertexAttribI4uiv)(GLuint, const GLuint *);
#define glVertexAttribI4uiv gl_VertexAttribI4uiv
extern void (CODEGEN_FUNCPTR *gl_VertexAttribI4usv)(GLuint, const GLushort *);
#define glVertexAttribI4usv gl_VertexAttribI4usv
extern void (CODEGEN_FUNCPTR *gl_VertexAttribIPointer)(GLuint, GLint, GLenum, GLsizei, const void *);
#define glVertexAttribIPointer gl_VertexAttribIPointer

extern void (CODEGEN_FUNCPTR *gl_CopyBufferSubData)(GLenum, GLenum, GLintptr, GLintptr, GLsizeiptr);
#define glCopyBufferSubData gl_CopyBufferSubData
extern void (CODEGEN_FUNCPTR *gl_DrawArraysInstanced)(GLenum, GLint, GLsizei, GLsizei);
#define glDrawArraysInstanced gl_DrawArraysInstanced
extern void (CODEGEN_FUNCPTR *gl_DrawElementsInstanced)(GLenum, GLsizei, GLenum, const void *, GLsizei);
#define glDrawElementsInstanced gl_DrawElementsInstanced
extern void (CODEGEN_FUNCPTR *gl_GetActiveUniformBlockName)(GLuint, GLuint, GLsizei, GLsizei *, GLchar *);
#define glGetActiveUniformBlockName gl_GetActiveUniformBlockName
extern void (CODEGEN_FUNCPTR *gl_GetActiveUniformBlockiv)(GLuint, GLuint, GLenum, GLint *);
#define glGetActiveUniformBlockiv gl_GetActiveUniformBlockiv
extern void (CODEGEN_FUNCPTR *gl_GetActiveUniformName)(GLuint, GLuint, GLsizei, GLsizei *, GLchar *);
#define glGetActiveUniformName gl_GetActiveUniformName
extern void (CODEGEN_FUNCPTR *gl_GetActiveUniformsiv)(GLuint, GLsizei, const GLuint *, GLenum, GLint *);
#define glGetActiveUniformsiv gl_GetActiveUniformsiv
extern GLuint (CODEGEN_FUNCPTR *gl_GetUniformBlockIndex)(GLuint, const GLchar *);
#define glGetUniformBlockIndex gl_GetUniformBlockIndex
extern void (CODEGEN_FUNCPTR *gl_GetUniformIndices)(GLuint, GLsizei, const GLchar *const*, GLuint *);
#define glGetUniformIndices gl_GetUniformIndices
extern void (CODEGEN_FUNCPTR *gl_PrimitiveRestartIndex)(GLuint);
#define glPrimitiveRestartIndex gl_PrimitiveRestartIndex
extern void (CODEGEN_FUNCPTR *gl_TexBuffer)(GLenum, GLenum, GLuint);
#define glTexBuffer gl_TexBuffer
extern void (CODEGEN_FUNCPTR *gl_UniformBlockBinding)(GLuint, GLuint, GLuint);
#define glUniformBlockBinding gl_UniformBlockBinding

extern GLenum (CODEGEN_FUNCPTR *gl_ClientWaitSync)(GLsync, GLbitfield, GLuint64);
#define glClientWaitSync gl_ClientWaitSync
extern void (CODEGEN_FUNCPTR *gl_DeleteSync)(GLsync);
#define glDeleteSync gl_DeleteSync
extern void (CODEGEN_FUNCPTR *gl_DrawElementsBaseVertex)(GLenum, GLsizei, GLenum, const void *, GLint);
#define glDrawElementsBaseVertex gl_DrawElementsBaseVertex
extern void (CODEGEN_FUNCPTR *gl_DrawElementsInstancedBaseVertex)(GLenum, GLsizei, GLenum, const void *, GLsizei, GLint);
#define glDrawElementsInstancedBaseVertex gl_DrawElementsInstancedBaseVertex
extern void (CODEGEN_FUNCPTR *gl_DrawRangeElementsBaseVertex)(GLenum, GLuint, GLuint, GLsizei, GLenum, const void *, GLint);
#define glDrawRangeElementsBaseVertex gl_DrawRangeElementsBaseVertex
extern GLsync (CODEGEN_FUNCPTR *gl_FenceSync)(GLenum, GLbitfield);
#define glFenceSync gl_FenceSync
extern void (CODEGEN_FUNCPTR *gl_FramebufferTexture)(GLenum, GLenum, GLuint, GLint);
#define glFramebufferTexture gl_FramebufferTexture
extern void (CODEGEN_FUNCPTR *gl_GetBufferParameteri64v)(GLenum, GLenum, GLint64 *);
#define glGetBufferParameteri64v gl_GetBufferParameteri64v
extern void (CODEGEN_FUNCPTR *gl_GetInteger64i_v)(GLenum, GLuint, GLint64 *);
#define glGetInteger64i_v gl_GetInteger64i_v
extern void (CODEGEN_FUNCPTR *gl_GetInteger64v)(GLenum, GLint64 *);
#define glGetInteger64v gl_GetInteger64v
extern void (CODEGEN_FUNCPTR *gl_GetMultisamplefv)(GLenum, GLuint, GLfloat *);
#define glGetMultisamplefv gl_GetMultisamplefv
extern void (CODEGEN_FUNCPTR *gl_GetSynciv)(GLsync, GLenum, GLsizei, GLsizei *, GLint *);
#define glGetSynciv gl_GetSynciv
extern GLboolean (CODEGEN_FUNCPTR *gl_IsSync)(GLsync);
#define glIsSync gl_IsSync
extern void (CODEGEN_FUNCPTR *gl_MultiDrawElementsBaseVertex)(GLenum, const GLsizei *, GLenum, const void *const*, GLsizei, const GLint *);
#define glMultiDrawElementsBaseVertex gl_MultiDrawElementsBaseVertex
extern void (CODEGEN_FUNCPTR *gl_ProvokingVertex)(GLenum);
#define glProvokingVertex gl_ProvokingVertex
extern void (CODEGEN_FUNCPTR *gl_SampleMaski)(GLuint, GLbitfield);
#define glSampleMaski gl_SampleMaski
extern void (CODEGEN_FUNCPTR *gl_TexImage2DMultisample)(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean);
#define glTexImage2DMultisample gl_TexImage2DMultisample
extern void (CODEGEN_FUNCPTR *gl_TexImage3DMultisample)(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean);
#define glTexImage3DMultisample gl_TexImage3DMultisample
extern void (CODEGEN_FUNCPTR *gl_WaitSync)(GLsync, GLbitfield, GLuint64);
#define glWaitSync gl_WaitSync

extern void (CODEGEN_FUNCPTR *gl_BindFragDataLocationIndexed)(GLuint, GLuint, GLuint, const GLchar *);
#define glBindFragDataLocationIndexed gl_BindFragDataLocationIndexed
extern void (CODEGEN_FUNCPTR *gl_BindSampler)(GLuint, GLuint);
#define glBindSampler gl_BindSampler
extern void (CODEGEN_FUNCPTR *gl_DeleteSamplers)(GLsizei, const GLuint *);
#define glDeleteSamplers gl_DeleteSamplers
extern void (CODEGEN_FUNCPTR *gl_GenSamplers)(GLsizei, GLuint *);
#define glGenSamplers gl_GenSamplers
extern GLint (CODEGEN_FUNCPTR *gl_GetFragDataIndex)(GLuint, const GLchar *);
#define glGetFragDataIndex gl_GetFragDataIndex
extern void (CODEGEN_FUNCPTR *gl_GetQueryObjecti64v)(GLuint, GLenum, GLint64 *);
#define glGetQueryObjecti64v gl_GetQueryObjecti64v
extern void (CODEGEN_FUNCPTR *gl_GetQueryObjectui64v)(GLuint, GLenum, GLuint64 *);
#define glGetQueryObjectui64v gl_GetQueryObjectui64v
extern void (CODEGEN_FUNCPTR *gl_GetSamplerParameterIiv)(GLuint, GLenum, GLint *);
#define glGetSamplerParameterIiv gl_GetSamplerParameterIiv
extern void (CODEGEN_FUNCPTR *gl_GetSamplerParameterIuiv)(GLuint, GLenum, GLuint *);
#define glGetSamplerParameterIuiv gl_GetSamplerParameterIuiv
extern void (CODEGEN_FUNCPTR *gl_GetSamplerParameterfv)(GLuint, GLenum, GLfloat *);
#define glGetSamplerParameterfv gl_GetSamplerParameterfv
extern void (CODEGEN_FUNCPTR *gl_GetSamplerParameteriv)(GLuint, GLenum, GLint *);
#define glGetSamplerParameteriv gl_GetSamplerParameteriv
extern GLboolean (CODEGEN_FUNCPTR *gl_IsSampler)(GLuint);
#define glIsSampler gl_IsSampler
extern void (CODEGEN_FUNCPTR *gl_QueryCounter)(GLuint, GLenum);
#define glQueryCounter gl_QueryCounter
extern void (CODEGEN_FUNCPTR *gl_SamplerParameterIiv)(GLuint, GLenum, const GLint *);
#define glSamplerParameterIiv gl_SamplerParameterIiv
extern void (CODEGEN_FUNCPTR *gl_SamplerParameterIuiv)(GLuint, GLenum, const GLuint *);
#define glSamplerParameterIuiv gl_SamplerParameterIuiv
extern void (CODEGEN_FUNCPTR *gl_SamplerParameterf)(GLuint, GLenum, GLfloat);
#define glSamplerParameterf gl_SamplerParameterf
extern void (CODEGEN_FUNCPTR *gl_SamplerParameterfv)(GLuint, GLenum, const GLfloat *);
#define glSamplerParameterfv gl_SamplerParameterfv
extern void (CODEGEN_FUNCPTR *gl_SamplerParameteri)(GLuint, GLenum, GLint);
#define glSamplerParameteri gl_SamplerParameteri
extern void (CODEGEN_FUNCPTR *gl_SamplerParameteriv)(GLuint, GLenum, const GLint *);
#define glSamplerParameteriv gl_SamplerParameteriv
extern void (CODEGEN_FUNCPTR *gl_VertexAttribDivisor)(GLuint, GLuint);
#define glVertexAttribDivisor gl_VertexAttribDivisor
extern void (CODEGEN_FUNCPTR *gl_VertexAttribP1ui)(GLuint, GLenum, GLboolean, GLuint);
#define glVertexAttribP1ui gl_VertexAttribP1ui
extern void (CODEGEN_FUNCPTR *gl_VertexAttribP1uiv)(GLuint, GLenum, GLboolean, const GLuint *);
#define glVertexAttribP1uiv gl_VertexAttribP1uiv
extern void (CODEGEN_FUNCPTR *gl_VertexAttribP2ui)(GLuint, GLenum, GLboolean, GLuint);
#define glVertexAttribP2ui gl_VertexAttribP2ui
extern void (CODEGEN_FUNCPTR *gl_VertexAttribP2uiv)(GLuint, GLenum, GLboolean, const GLuint *);
#define glVertexAttribP2uiv gl_VertexAttribP2uiv
extern void (CODEGEN_FUNCPTR *gl_VertexAttribP3ui)(GLuint, GLenum, GLboolean, GLuint);
#define glVertexAttribP3ui gl_VertexAttribP3ui
extern void (CODEGEN_FUNCPTR *gl_VertexAttribP3uiv)(GLuint, GLenum, GLboolean, const GLuint *);
#define glVertexAttribP3uiv gl_VertexAttribP3uiv
extern void (CODEGEN_FUNCPTR *gl_VertexAttribP4ui)(GLuint, GLenum, GLboolean, GLuint);
#define glVertexAttribP4ui gl_VertexAttribP4ui
extern void (CODEGEN_FUNCPTR *gl_VertexAttribP4uiv)(GLuint, GLenum, GLboolean, const GLuint *);
#define glVertexAttribP4uiv gl_VertexAttribP4uiv

enum ogl_LoadStatus
{
	ogl_LOAD_FAILED = 0,
	ogl_LOAD_SUCCEEDED = 1,
};

int ogl_LoadFunctions();

int ogl_GetMinorVersion();
int ogl_GetMajorVersion();
int ogl_IsVersionGEQ(int majorVersion, int minorVersion);

#ifdef __cplusplus
}
#endif /*__cplusplus*/

#endif //POINTER_C_GENERATED_HEADER_OPENGL_H
